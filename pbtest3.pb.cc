// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pbtest3.proto

#include "pbtest3.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class Test0DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test0>
      _instance;
} _Test0_default_instance_;
class Test1_FMapEntry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test1_FMapEntry_DoNotUse>
      _instance;
} _Test1_FMapEntry_DoNotUse_default_instance_;
class Test1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test1>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr f_oneof_f1_;
  ::google::protobuf::int32 f_oneof_f2_;
} _Test1_default_instance_;
class Test2_TestInner1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test2_TestInner1>
      _instance;
} _Test2_TestInner1_default_instance_;
class Test2_TestInner2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test2_TestInner2>
      _instance;
} _Test2_TestInner2_default_instance_;
class Test2_TestInner3_TestInner3_1DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test2_TestInner3_TestInner3_1>
      _instance;
} _Test2_TestInner3_TestInner3_1_default_instance_;
class Test2_TestInner3_TestInner3_2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test2_TestInner3_TestInner3_2>
      _instance;
} _Test2_TestInner3_TestInner3_2_default_instance_;
class Test2_TestInner3_F1Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test2_TestInner3_F1Entry_DoNotUse>
      _instance;
} _Test2_TestInner3_F1Entry_DoNotUse_default_instance_;
class Test2_TestInner3DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test2_TestInner3>
      _instance;
} _Test2_TestInner3_default_instance_;
class Test2DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test2>
      _instance;
  ::google::protobuf::internal::ArenaStringPtr f3_;
  const ::Test2_TestInner3* f4_;
} _Test2_default_instance_;
class Test4_F5Entry_DoNotUseDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test4_F5Entry_DoNotUse>
      _instance;
} _Test4_F5Entry_DoNotUse_default_instance_;
class Test4DefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Test4>
      _instance;
} _Test4_default_instance_;
namespace protobuf_pbtest3_2eproto {
void InitDefaultsTest0Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Test0_default_instance_;
    new (ptr) ::Test0();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Test0::InitAsDefaultInstance();
}

void InitDefaultsTest0() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest0Impl);
}

void InitDefaultsTest1_FMapEntry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Test1_FMapEntry_DoNotUse_default_instance_;
    new (ptr) ::Test1_FMapEntry_DoNotUse();
  }
  ::Test1_FMapEntry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsTest1_FMapEntry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest1_FMapEntry_DoNotUseImpl);
}

void InitDefaultsTest1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pbtest3_2eproto::InitDefaultsTest1_FMapEntry_DoNotUse();
  protobuf_pbtest3_2eproto::InitDefaultsTest0();
  protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner2();
  protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3_TestInner3_2();
  {
    void* ptr = &::_Test1_default_instance_;
    new (ptr) ::Test1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Test1::InitAsDefaultInstance();
}

void InitDefaultsTest1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest1Impl);
}

void InitDefaultsTest2_TestInner1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Test2_TestInner1_default_instance_;
    new (ptr) ::Test2_TestInner1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Test2_TestInner1::InitAsDefaultInstance();
}

void InitDefaultsTest2_TestInner1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest2_TestInner1Impl);
}

void InitDefaultsTest2_TestInner2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Test2_TestInner2_default_instance_;
    new (ptr) ::Test2_TestInner2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Test2_TestInner2::InitAsDefaultInstance();
}

void InitDefaultsTest2_TestInner2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest2_TestInner2Impl);
}

void InitDefaultsTest2_TestInner3_TestInner3_1Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Test2_TestInner3_TestInner3_1_default_instance_;
    new (ptr) ::Test2_TestInner3_TestInner3_1();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Test2_TestInner3_TestInner3_1::InitAsDefaultInstance();
}

void InitDefaultsTest2_TestInner3_TestInner3_1() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest2_TestInner3_TestInner3_1Impl);
}

void InitDefaultsTest2_TestInner3_TestInner3_2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Test2_TestInner3_TestInner3_2_default_instance_;
    new (ptr) ::Test2_TestInner3_TestInner3_2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Test2_TestInner3_TestInner3_2::InitAsDefaultInstance();
}

void InitDefaultsTest2_TestInner3_TestInner3_2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest2_TestInner3_TestInner3_2Impl);
}

void InitDefaultsTest2_TestInner3_F1Entry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3_TestInner3_2();
  {
    void* ptr = &::_Test2_TestInner3_F1Entry_DoNotUse_default_instance_;
    new (ptr) ::Test2_TestInner3_F1Entry_DoNotUse();
  }
  ::Test2_TestInner3_F1Entry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsTest2_TestInner3_F1Entry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest2_TestInner3_F1Entry_DoNotUseImpl);
}

void InitDefaultsTest2_TestInner3Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3_F1Entry_DoNotUse();
  protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3_TestInner3_1();
  {
    void* ptr = &::_Test2_TestInner3_default_instance_;
    new (ptr) ::Test2_TestInner3();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Test2_TestInner3::InitAsDefaultInstance();
}

void InitDefaultsTest2_TestInner3() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest2_TestInner3Impl);
}

void InitDefaultsTest2Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3();
  protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner2();
  protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner1();
  {
    void* ptr = &::_Test2_default_instance_;
    new (ptr) ::Test2();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Test2::InitAsDefaultInstance();
}

void InitDefaultsTest2() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest2Impl);
}

void InitDefaultsTest4_F5Entry_DoNotUseImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_Test4_F5Entry_DoNotUse_default_instance_;
    new (ptr) ::Test4_F5Entry_DoNotUse();
  }
  ::Test4_F5Entry_DoNotUse::InitAsDefaultInstance();
}

void InitDefaultsTest4_F5Entry_DoNotUse() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest4_F5Entry_DoNotUseImpl);
}

void InitDefaultsTest4Impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_pbtest3_2eproto::InitDefaultsTest4_F5Entry_DoNotUse();
  {
    void* ptr = &::_Test4_default_instance_;
    new (ptr) ::Test4();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Test4::InitAsDefaultInstance();
}

void InitDefaultsTest4() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &InitDefaultsTest4Impl);
}

::google::protobuf::Metadata file_level_metadata[12];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[2];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test0, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1_FMapEntry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1_FMapEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1_FMapEntry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1_FMapEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_sint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_sint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_fixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_fixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_sfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_sfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_map_),
  offsetof(::Test1DefaultTypeInternal, f_oneof_f1_),
  offsetof(::Test1DefaultTypeInternal, f_oneof_f2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_empty_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_enum_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_empty_inner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_enum_inner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_int32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_int64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_sint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_sint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_fixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_fixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_sfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_sfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_string_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_bytes_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_empty_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_enum_out_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_empty_inner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_enum_inner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_double_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_float_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_int32f_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_int64f_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_uint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_uint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_sint32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_sint64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_fixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_fixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_sfixed32_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_sfixed64_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rfu_bool_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, rf_inner_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test1, f_oneof_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner1, f1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner1, f2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner1, f3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3_TestInner3_1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3_TestInner3_2, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3_TestInner3_2, f1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3_TestInner3_2, f2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3_F1Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3_F1Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3_F1Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3_F1Entry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3, f1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3, f2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2_TestInner3, f3_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2, _internal_metadata_),
  ~0u,  // no _extensions_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2, f1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2, f2_),
  offsetof(::Test2DefaultTypeInternal, f3_),
  offsetof(::Test2DefaultTypeInternal, f4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2, f5_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2, f6_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2, f7_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test2, test_oneof_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test4_F5Entry_DoNotUse, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test4_F5Entry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test4_F5Entry_DoNotUse, key_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test4_F5Entry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test4, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test4, f1_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test4, f2_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test4, f3_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test4, f4_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Test4, f5_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Test0)},
  { 5, 12, sizeof(::Test1_FMapEntry_DoNotUse)},
  { 14, -1, sizeof(::Test1)},
  { 75, -1, sizeof(::Test2_TestInner1)},
  { 83, -1, sizeof(::Test2_TestInner2)},
  { 88, -1, sizeof(::Test2_TestInner3_TestInner3_1)},
  { 93, -1, sizeof(::Test2_TestInner3_TestInner3_2)},
  { 100, 107, sizeof(::Test2_TestInner3_F1Entry_DoNotUse)},
  { 109, -1, sizeof(::Test2_TestInner3)},
  { 117, -1, sizeof(::Test2)},
  { 130, 137, sizeof(::Test4_F5Entry_DoNotUse)},
  { 139, -1, sizeof(::Test4)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test0_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test1_FMapEntry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test2_TestInner1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test2_TestInner2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test2_TestInner3_TestInner3_1_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test2_TestInner3_TestInner3_2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test2_TestInner3_F1Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test2_TestInner3_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test2_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test4_F5Entry_DoNotUse_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Test4_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "pbtest3.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, file_level_enum_descriptors, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 12);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\rpbtest3.proto\"\007\n\005Test0\"\274\n\n\005Test1\022\020\n\010f_"
      "double\030\001 \001(\001\022\017\n\007f_float\030\002 \001(\002\022\017\n\007f_int32"
      "\030\003 \001(\005\022\017\n\007f_int64\030\004 \001(\003\022\020\n\010f_uint32\030\005 \001("
      "\r\022\020\n\010f_uint64\030\006 \001(\004\022\020\n\010f_sint32\030\007 \001(\021\022\020\n"
      "\010f_sint64\030\010 \001(\022\022\021\n\tf_fixed32\030\t \001(\007\022\021\n\tf_"
      "fixed64\030\n \001(\006\022\022\n\nf_sfixed32\030\013 \001(\017\022\022\n\nf_s"
      "fixed64\030\014 \001(\020\022\016\n\006f_bool\030\r \001(\010\022\020\n\010f_strin"
      "g\030\016 \001(\t\022\017\n\007f_bytes\030\017 \001(\014\022\037\n\005f_map\030\020 \003(\0132"
      "\020.Test1.FMapEntry\022\024\n\nf_oneof_f1\030\021 \001(\tH\000\022"
      "\024\n\nf_oneof_f2\030\022 \001(\005H\000\022\033\n\013f_empty_out\030\023 \001"
      "(\0132\006.Test0\022\032\n\nf_enum_out\030\024 \001(\0162\006.Enum0\022("
      "\n\rf_empty_inner\030\025 \001(\0132\021.Test2.TestInner2"
      "\022%\n\014f_enum_inner\030\026 \001(\0162\017.Test2.TestEnum\022"
      "\021\n\trf_double\030\027 \003(\001\022\020\n\010rf_float\030\030 \003(\002\022\020\n\010"
      "rf_int32\030\031 \003(\005\022\020\n\010rf_int64\030\032 \003(\003\022\021\n\trf_u"
      "int32\030\033 \003(\r\022\021\n\trf_uint64\030\034 \003(\004\022\021\n\trf_sin"
      "t32\030\035 \003(\021\022\021\n\trf_sint64\030\036 \003(\022\022\022\n\nrf_fixed"
      "32\030\037 \003(\007\022\022\n\nrf_fixed64\030  \003(\006\022\023\n\013rf_sfixe"
      "d32\030! \003(\017\022\023\n\013rf_sfixed64\030\" \003(\020\022\017\n\007rf_boo"
      "l\030# \003(\010\022\021\n\trf_string\030$ \003(\t\022\020\n\010rf_bytes\030%"
      " \003(\014\022\034\n\014rf_empty_out\030& \003(\0132\006.Test0\022\033\n\013rf"
      "_enum_out\030\' \003(\0162\006.Enum0\022)\n\016rf_empty_inne"
      "r\030( \003(\0132\021.Test2.TestInner2\022&\n\rrf_enum_in"
      "ner\030) \003(\0162\017.Test2.TestEnum\022\026\n\nrfu_double"
      "\030* \003(\001B\002\020\000\022\025\n\trfu_float\030+ \003(\002B\002\020\000\022\026\n\nrfu"
      "_int32f\030, \003(\005B\002\020\000\022\026\n\nrfu_int64f\030- \003(\003B\002\020"
      "\000\022\026\n\nrfu_uint32\030. \003(\rB\002\020\000\022\026\n\nrfu_uint64\030"
      "/ \003(\004B\002\020\000\022\026\n\nrfu_sint32\0300 \003(\021B\002\020\000\022\026\n\nrfu"
      "_sint64\0301 \003(\022B\002\020\000\022\027\n\013rfu_fixed32\0302 \003(\007B\002"
      "\020\000\022\027\n\013rfu_fixed64\0303 \003(\006B\002\020\000\022\030\n\014rfu_sfixe"
      "d32\0304 \003(\017B\002\020\000\022\030\n\014rfu_sfixed64\0305 \003(\020B\002\020\000\022"
      "\024\n\010rfu_bool\0306 \003(\010B\002\020\000\0220\n\010rf_inner\0307 \003(\0132"
      "\036.Test2.TestInner3.TestInner3_2\032+\n\tFMapE"
      "ntry\022\013\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001B\t\n\007"
      "f_oneof\"\273\004\n\005Test2\022\n\n\002f1\030\001 \003(\t\022\n\n\002f2\030\002 \001("
      "\006\022\014\n\002f3\030\003 \001(\tH\000\022\037\n\002f4\030\004 \001(\0132\021.Test2.Test"
      "Inner3H\000\022\035\n\002f5\030\005 \001(\0132\021.Test2.TestInner2\022"
      "\035\n\002f6\030\006 \001(\0132\021.Test2.TestInner3\022\035\n\002f7\030\007 \001"
      "(\0132\021.Test2.TestInner1\0320\n\nTestInner1\022\n\n\002f"
      "1\030\001 \003(\001\022\n\n\002f2\030\002 \001(\002\022\n\n\002f3\030\003 \001(\t\032\014\n\nTestI"
      "nner2\032\377\001\n\nTestInner3\022%\n\002f1\030\001 \003(\0132\031.Test2"
      ".TestInner3.F1Entry\022\033\n\002f2\030\002 \001(\0162\017.Test2."
      "TestEnum\022*\n\002f3\030\003 \001(\0132\036.Test2.TestInner3."
      "TestInner3_1\032\016\n\014TestInner3_1\032&\n\014TestInne"
      "r3_2\022\n\n\002f1\030\001 \001(\005\022\n\n\002f2\030\002 \001(\004\032I\n\007F1Entry\022"
      "\013\n\003key\030\001 \001(\t\022-\n\005value\030\002 \001(\0132\036.Test2.Test"
      "Inner3.TestInner3_2:\0028\001\">\n\010TestEnum\022\013\n\007V"
      "ALUE_0\020\000\022\013\n\007VALUE_1\020\001\022\013\n\007VALUE_2\020\002\022\013\n\007VA"
      "LUE_3\020\003B\014\n\ntest_oneof\"\177\n\005Test4\022\n\n\002f1\030\n \001"
      "(\005\022\n\n\002f2\030\003 \001(\t\022\n\n\002f3\030\002 \001(\002\022\013\n\002f4\030\240\001 \001(\001\022"
      "\032\n\002f5\030c \003(\0132\016.Test4.F5Entry\032)\n\007F5Entry\022\013"
      "\n\003key\030\001 \001(\005\022\r\n\005value\030\002 \001(\005:\0028\001*8\n\005Enum0\022"
      "\010\n\004NULL\020\000\022\007\n\003ONE\020\001\022\007\n\003TWO\020\002\022\t\n\005THREE\020\003\022\010"
      "\n\004FOUR\020\004b\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 2136);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "pbtest3.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_pbtest3_2eproto
const ::google::protobuf::EnumDescriptor* Test2_TestEnum_descriptor() {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pbtest3_2eproto::file_level_enum_descriptors[0];
}
bool Test2_TestEnum_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Test2_TestEnum Test2::VALUE_0;
const Test2_TestEnum Test2::VALUE_1;
const Test2_TestEnum Test2::VALUE_2;
const Test2_TestEnum Test2::VALUE_3;
const Test2_TestEnum Test2::TestEnum_MIN;
const Test2_TestEnum Test2::TestEnum_MAX;
const int Test2::TestEnum_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
const ::google::protobuf::EnumDescriptor* Enum0_descriptor() {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_pbtest3_2eproto::file_level_enum_descriptors[1];
}
bool Enum0_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
      return true;
    default:
      return false;
  }
}


// ===================================================================

void Test0::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Test0::Test0()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pbtest3_2eproto::InitDefaultsTest0();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test0)
}
Test0::Test0(const Test0& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Test0)
}

void Test0::SharedCtor() {
  _cached_size_ = 0;
}

Test0::~Test0() {
  // @@protoc_insertion_point(destructor:Test0)
  SharedDtor();
}

void Test0::SharedDtor() {
}

void Test0::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test0::descriptor() {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Test0& Test0::default_instance() {
  ::protobuf_pbtest3_2eproto::InitDefaultsTest0();
  return *internal_default_instance();
}


void Test0::Clear() {
// @@protoc_insertion_point(message_clear_start:Test0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Test0::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test0)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Test0)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test0)
  return false;
#undef DO_
}

void Test0::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Test0)
}

::google::protobuf::uint8* Test0::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Test0)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Test0)
  return target;
}

size_t Test0::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Test0)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test0::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Test0)
  GOOGLE_DCHECK_NE(&from, this);
  const Test0* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Test0>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Test0)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Test0)
    MergeFrom(*source);
  }
}

void Test0::MergeFrom(const Test0& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Test0)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test0::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Test0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test0::CopyFrom(const Test0& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Test0)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test0::IsInitialized() const {
  return true;
}

void Test0::Swap(Test0* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test0::InternalSwap(Test0* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test0::GetMetadata() const {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Test1_FMapEntry_DoNotUse::Test1_FMapEntry_DoNotUse() {}
Test1_FMapEntry_DoNotUse::Test1_FMapEntry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Test1_FMapEntry_DoNotUse::MergeFrom(const Test1_FMapEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Test1_FMapEntry_DoNotUse::GetMetadata() const {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[1];
}
void Test1_FMapEntry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Test1::InitAsDefaultInstance() {
  ::_Test1_default_instance_.f_oneof_f1_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::_Test1_default_instance_.f_oneof_f2_ = 0;
  ::_Test1_default_instance_._instance.get_mutable()->f_empty_out_ = const_cast< ::Test0*>(
      ::Test0::internal_default_instance());
  ::_Test1_default_instance_._instance.get_mutable()->f_empty_inner_ = const_cast< ::Test2_TestInner2*>(
      ::Test2_TestInner2::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Test1::kFDoubleFieldNumber;
const int Test1::kFFloatFieldNumber;
const int Test1::kFInt32FieldNumber;
const int Test1::kFInt64FieldNumber;
const int Test1::kFUint32FieldNumber;
const int Test1::kFUint64FieldNumber;
const int Test1::kFSint32FieldNumber;
const int Test1::kFSint64FieldNumber;
const int Test1::kFFixed32FieldNumber;
const int Test1::kFFixed64FieldNumber;
const int Test1::kFSfixed32FieldNumber;
const int Test1::kFSfixed64FieldNumber;
const int Test1::kFBoolFieldNumber;
const int Test1::kFStringFieldNumber;
const int Test1::kFBytesFieldNumber;
const int Test1::kFMapFieldNumber;
const int Test1::kFOneofF1FieldNumber;
const int Test1::kFOneofF2FieldNumber;
const int Test1::kFEmptyOutFieldNumber;
const int Test1::kFEnumOutFieldNumber;
const int Test1::kFEmptyInnerFieldNumber;
const int Test1::kFEnumInnerFieldNumber;
const int Test1::kRfDoubleFieldNumber;
const int Test1::kRfFloatFieldNumber;
const int Test1::kRfInt32FieldNumber;
const int Test1::kRfInt64FieldNumber;
const int Test1::kRfUint32FieldNumber;
const int Test1::kRfUint64FieldNumber;
const int Test1::kRfSint32FieldNumber;
const int Test1::kRfSint64FieldNumber;
const int Test1::kRfFixed32FieldNumber;
const int Test1::kRfFixed64FieldNumber;
const int Test1::kRfSfixed32FieldNumber;
const int Test1::kRfSfixed64FieldNumber;
const int Test1::kRfBoolFieldNumber;
const int Test1::kRfStringFieldNumber;
const int Test1::kRfBytesFieldNumber;
const int Test1::kRfEmptyOutFieldNumber;
const int Test1::kRfEnumOutFieldNumber;
const int Test1::kRfEmptyInnerFieldNumber;
const int Test1::kRfEnumInnerFieldNumber;
const int Test1::kRfuDoubleFieldNumber;
const int Test1::kRfuFloatFieldNumber;
const int Test1::kRfuInt32FFieldNumber;
const int Test1::kRfuInt64FFieldNumber;
const int Test1::kRfuUint32FieldNumber;
const int Test1::kRfuUint64FieldNumber;
const int Test1::kRfuSint32FieldNumber;
const int Test1::kRfuSint64FieldNumber;
const int Test1::kRfuFixed32FieldNumber;
const int Test1::kRfuFixed64FieldNumber;
const int Test1::kRfuSfixed32FieldNumber;
const int Test1::kRfuSfixed64FieldNumber;
const int Test1::kRfuBoolFieldNumber;
const int Test1::kRfInnerFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Test1::Test1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pbtest3_2eproto::InitDefaultsTest1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test1)
}
Test1::Test1(const Test1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      rf_double_(from.rf_double_),
      rf_float_(from.rf_float_),
      rf_int32_(from.rf_int32_),
      rf_int64_(from.rf_int64_),
      rf_uint32_(from.rf_uint32_),
      rf_uint64_(from.rf_uint64_),
      rf_sint32_(from.rf_sint32_),
      rf_sint64_(from.rf_sint64_),
      rf_fixed32_(from.rf_fixed32_),
      rf_fixed64_(from.rf_fixed64_),
      rf_sfixed32_(from.rf_sfixed32_),
      rf_sfixed64_(from.rf_sfixed64_),
      rf_bool_(from.rf_bool_),
      rf_string_(from.rf_string_),
      rf_bytes_(from.rf_bytes_),
      rf_empty_out_(from.rf_empty_out_),
      rf_enum_out_(from.rf_enum_out_),
      rf_empty_inner_(from.rf_empty_inner_),
      rf_enum_inner_(from.rf_enum_inner_),
      rfu_double_(from.rfu_double_),
      rfu_float_(from.rfu_float_),
      rfu_int32f_(from.rfu_int32f_),
      rfu_int64f_(from.rfu_int64f_),
      rfu_uint32_(from.rfu_uint32_),
      rfu_uint64_(from.rfu_uint64_),
      rfu_sint32_(from.rfu_sint32_),
      rfu_sint64_(from.rfu_sint64_),
      rfu_fixed32_(from.rfu_fixed32_),
      rfu_fixed64_(from.rfu_fixed64_),
      rfu_sfixed32_(from.rfu_sfixed32_),
      rfu_sfixed64_(from.rfu_sfixed64_),
      rfu_bool_(from.rfu_bool_),
      rf_inner_(from.rf_inner_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  f_map_.MergeFrom(from.f_map_);
  f_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.f_string().size() > 0) {
    f_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f_string_);
  }
  f_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.f_bytes().size() > 0) {
    f_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f_bytes_);
  }
  if (from.has_f_empty_out()) {
    f_empty_out_ = new ::Test0(*from.f_empty_out_);
  } else {
    f_empty_out_ = NULL;
  }
  if (from.has_f_empty_inner()) {
    f_empty_inner_ = new ::Test2_TestInner2(*from.f_empty_inner_);
  } else {
    f_empty_inner_ = NULL;
  }
  ::memcpy(&f_double_, &from.f_double_,
    static_cast<size_t>(reinterpret_cast<char*>(&f_enum_inner_) -
    reinterpret_cast<char*>(&f_double_)) + sizeof(f_enum_inner_));
  clear_has_f_oneof();
  switch (from.f_oneof_case()) {
    case kFOneofF1: {
      set_f_oneof_f1(from.f_oneof_f1());
      break;
    }
    case kFOneofF2: {
      set_f_oneof_f2(from.f_oneof_f2());
      break;
    }
    case F_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Test1)
}

void Test1::SharedCtor() {
  f_string_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  f_bytes_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&f_empty_out_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f_enum_inner_) -
      reinterpret_cast<char*>(&f_empty_out_)) + sizeof(f_enum_inner_));
  clear_has_f_oneof();
  _cached_size_ = 0;
}

Test1::~Test1() {
  // @@protoc_insertion_point(destructor:Test1)
  SharedDtor();
}

void Test1::SharedDtor() {
  f_string_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  f_bytes_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete f_empty_out_;
  if (this != internal_default_instance()) delete f_empty_inner_;
  if (has_f_oneof()) {
    clear_f_oneof();
  }
}

void Test1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test1::descriptor() {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Test1& Test1::default_instance() {
  ::protobuf_pbtest3_2eproto::InitDefaultsTest1();
  return *internal_default_instance();
}


void Test1::clear_f_oneof() {
// @@protoc_insertion_point(one_of_clear_start:Test1)
  switch (f_oneof_case()) {
    case kFOneofF1: {
      f_oneof_.f_oneof_f1_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kFOneofF2: {
      // No need to clear
      break;
    }
    case F_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = F_ONEOF_NOT_SET;
}


void Test1::Clear() {
// @@protoc_insertion_point(message_clear_start:Test1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f_map_.Clear();
  rf_double_.Clear();
  rf_float_.Clear();
  rf_int32_.Clear();
  rf_int64_.Clear();
  rf_uint32_.Clear();
  rf_uint64_.Clear();
  rf_sint32_.Clear();
  rf_sint64_.Clear();
  rf_fixed32_.Clear();
  rf_fixed64_.Clear();
  rf_sfixed32_.Clear();
  rf_sfixed64_.Clear();
  rf_bool_.Clear();
  rf_string_.Clear();
  rf_bytes_.Clear();
  rf_empty_out_.Clear();
  rf_enum_out_.Clear();
  rf_empty_inner_.Clear();
  rf_enum_inner_.Clear();
  rfu_double_.Clear();
  rfu_float_.Clear();
  rfu_int32f_.Clear();
  rfu_int64f_.Clear();
  rfu_uint32_.Clear();
  rfu_uint64_.Clear();
  rfu_sint32_.Clear();
  rfu_sint64_.Clear();
  rfu_fixed32_.Clear();
  rfu_fixed64_.Clear();
  rfu_sfixed32_.Clear();
  rfu_sfixed64_.Clear();
  rfu_bool_.Clear();
  rf_inner_.Clear();
  f_string_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  f_bytes_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && f_empty_out_ != NULL) {
    delete f_empty_out_;
  }
  f_empty_out_ = NULL;
  if (GetArenaNoVirtual() == NULL && f_empty_inner_ != NULL) {
    delete f_empty_inner_;
  }
  f_empty_inner_ = NULL;
  ::memset(&f_double_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f_enum_inner_) -
      reinterpret_cast<char*>(&f_double_)) + sizeof(f_enum_inner_));
  clear_f_oneof();
  _internal_metadata_.Clear();
}

bool Test1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // double f_double = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f_double_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float f_float = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &f_float_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 f_int32 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f_int32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int64 f_int64 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &f_int64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 f_uint32 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &f_uint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 f_uint64 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &f_uint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint32 f_sint32 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, &f_sint32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sint64 f_sint64 = 8;
      case 8: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &f_sint64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed32 f_fixed32 = 9;
      case 9: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(77u /* 77 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, &f_fixed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 f_fixed64 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 81 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &f_fixed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed32 f_sfixed32 = 11;
      case 11: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 93 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, &f_sfixed32_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // sfixed64 f_sfixed64 = 12;
      case 12: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(97u /* 97 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, &f_sfixed64_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bool f_bool = 13;
      case 13: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &f_bool_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string f_string = 14;
      case 14: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 114 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_f_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->f_string().data(), static_cast<int>(this->f_string().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Test1.f_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes f_bytes = 15;
      case 15: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 122 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_f_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, int32> f_map = 16;
      case 16: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
          Test1_FMapEntry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Test1_FMapEntry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&f_map_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string f_oneof_f1 = 17;
      case 17: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 138 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_f_oneof_f1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->f_oneof_f1().data(), static_cast<int>(this->f_oneof_f1().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Test1.f_oneof_f1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 f_oneof_f2 = 18;
      case 18: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(144u /* 144 & 0xFF */)) {
          clear_f_oneof();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f_oneof_.f_oneof_f2_)));
          set_has_f_oneof_f2();
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Test0 f_empty_out = 19;
      case 19: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 154 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f_empty_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Enum0 f_enum_out = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(160u /* 160 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_f_enum_out(static_cast< ::Enum0 >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Test2.TestInner2 f_empty_inner = 21;
      case 21: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 170 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f_empty_inner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Test2.TestEnum f_enum_inner = 22;
      case 22: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 176 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_f_enum_inner(static_cast< ::Test2_TestEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double rf_double = 23;
      case 23: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 186 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_rf_double())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(185u /* 185 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 186u, input, this->mutable_rf_double())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float rf_float = 24;
      case 24: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(194u /* 194 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rf_float())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(197u /* 197 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 194u, input, this->mutable_rf_float())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 rf_int32 = 25;
      case 25: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(202u /* 202 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rf_int32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(200u /* 200 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 202u, input, this->mutable_rf_int32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 rf_int64 = 26;
      case 26: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(210u /* 210 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_rf_int64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(208u /* 208 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 210u, input, this->mutable_rf_int64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 rf_uint32 = 27;
      case 27: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(218u /* 218 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rf_uint32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(216u /* 216 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 218u, input, this->mutable_rf_uint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 rf_uint64 = 28;
      case 28: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(226u /* 226 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_rf_uint64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(224u /* 224 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 226u, input, this->mutable_rf_uint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 rf_sint32 = 29;
      case 29: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(234u /* 234 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_rf_sint32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(232u /* 232 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 234u, input, this->mutable_rf_sint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 rf_sint64 = 30;
      case 30: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(242u /* 242 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_rf_sint64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(240u /* 240 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 242u, input, this->mutable_rf_sint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 rf_fixed32 = 31;
      case 31: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(250u /* 250 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_rf_fixed32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(253u /* 253 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 250u, input, this->mutable_rf_fixed32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 rf_fixed64 = 32;
      case 32: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(2u /* 258 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_rf_fixed64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1u /* 257 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 258u, input, this->mutable_rf_fixed64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 rf_sfixed32 = 33;
      case 33: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 266 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_rf_sfixed32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(13u /* 269 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 266u, input, this->mutable_rf_sfixed32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 rf_sfixed64 = 34;
      case 34: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u /* 274 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_rf_sfixed64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 273 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 274u, input, this->mutable_rf_sfixed64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool rf_bool = 35;
      case 35: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 282 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_rf_bool())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u /* 280 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 282u, input, this->mutable_rf_bool())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated string rf_string = 36;
      case 36: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 290 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_rf_string()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->rf_string(this->rf_string_size() - 1).data(),
            static_cast<int>(this->rf_string(this->rf_string_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Test1.rf_string"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bytes rf_bytes = 37;
      case 37: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 298 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_rf_bytes()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Test0 rf_empty_out = 38;
      case 38: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 306 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rf_empty_out()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Enum0 rf_enum_out = 39;
      case 39: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 314 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_rf_enum_out(static_cast< ::Enum0 >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(56u /* 312 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_rf_enum_out(static_cast< ::Enum0 >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Test2.TestInner2 rf_empty_inner = 40;
      case 40: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(66u /* 322 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rf_empty_inner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Test2.TestEnum rf_enum_inner = 41;
      case 41: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(74u /* 330 & 0xFF */)) {
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(static_cast<int>(length));
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            add_rf_enum_inner(static_cast< ::Test2_TestEnum >(value));
          }
          input->PopLimit(limit);
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(72u /* 328 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          add_rf_enum_inner(static_cast< ::Test2_TestEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated double rfu_double = 42 [packed = false];
      case 42: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(81u /* 337 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 2, 337u, input, this->mutable_rfu_double())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u /* 338 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_rfu_double())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated float rfu_float = 43 [packed = false];
      case 43: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(93u /* 349 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 2, 349u, input, this->mutable_rfu_float())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(90u /* 346 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, this->mutable_rfu_float())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 rfu_int32f = 44 [packed = false];
      case 44: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(96u /* 352 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 2, 352u, input, this->mutable_rfu_int32f())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(98u /* 354 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_rfu_int32f())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int64 rfu_int64f = 45 [packed = false];
      case 45: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(104u /* 360 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 2, 360u, input, this->mutable_rfu_int64f())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(106u /* 362 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, this->mutable_rfu_int64f())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint32 rfu_uint32 = 46 [packed = false];
      case 46: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(112u /* 368 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 2, 368u, input, this->mutable_rfu_uint32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(114u /* 370 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_rfu_uint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated uint64 rfu_uint64 = 47 [packed = false];
      case 47: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(120u /* 376 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 2, 376u, input, this->mutable_rfu_uint64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(122u /* 378 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, this->mutable_rfu_uint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint32 rfu_sint32 = 48 [packed = false];
      case 48: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(128u /* 384 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 2, 384u, input, this->mutable_rfu_sint32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(130u /* 386 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_rfu_sint32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sint64 rfu_sint64 = 49 [packed = false];
      case 49: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(136u /* 392 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 2, 392u, input, this->mutable_rfu_sint64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(138u /* 394 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_rfu_sint64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed32 rfu_fixed32 = 50 [packed = false];
      case 50: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(149u /* 405 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 2, 405u, input, this->mutable_rfu_fixed32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(146u /* 402 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED32>(
                 input, this->mutable_rfu_fixed32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated fixed64 rfu_fixed64 = 51 [packed = false];
      case 51: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(153u /* 409 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 2, 409u, input, this->mutable_rfu_fixed64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(154u /* 410 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, this->mutable_rfu_fixed64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed32 rfu_sfixed32 = 52 [packed = false];
      case 52: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(165u /* 421 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 2, 421u, input, this->mutable_rfu_sfixed32())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u /* 418 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED32>(
                 input, this->mutable_rfu_sfixed32())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated sfixed64 rfu_sfixed64 = 53 [packed = false];
      case 53: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(169u /* 425 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 2, 425u, input, this->mutable_rfu_sfixed64())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(170u /* 426 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SFIXED64>(
                 input, this->mutable_rfu_sfixed64())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated bool rfu_bool = 54 [packed = false];
      case 54: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(176u /* 432 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 2, 432u, input, this->mutable_rfu_bool())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(178u /* 434 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, this->mutable_rfu_bool())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .Test2.TestInner3.TestInner3_2 rf_inner = 55;
      case 55: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(186u /* 442 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
                input, add_rf_inner()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test1)
  return false;
#undef DO_
}

void Test1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double f_double = 1;
  if (this->f_double() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(1, this->f_double(), output);
  }

  // float f_float = 2;
  if (this->f_float() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->f_float(), output);
  }

  // int32 f_int32 = 3;
  if (this->f_int32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->f_int32(), output);
  }

  // int64 f_int64 = 4;
  if (this->f_int64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(4, this->f_int64(), output);
  }

  // uint32 f_uint32 = 5;
  if (this->f_uint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(5, this->f_uint32(), output);
  }

  // uint64 f_uint64 = 6;
  if (this->f_uint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->f_uint64(), output);
  }

  // sint32 f_sint32 = 7;
  if (this->f_sint32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(7, this->f_sint32(), output);
  }

  // sint64 f_sint64 = 8;
  if (this->f_sint64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->f_sint64(), output);
  }

  // fixed32 f_fixed32 = 9;
  if (this->f_fixed32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(9, this->f_fixed32(), output);
  }

  // fixed64 f_fixed64 = 10;
  if (this->f_fixed64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(10, this->f_fixed64(), output);
  }

  // sfixed32 f_sfixed32 = 11;
  if (this->f_sfixed32() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(11, this->f_sfixed32(), output);
  }

  // sfixed64 f_sfixed64 = 12;
  if (this->f_sfixed64() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(12, this->f_sfixed64(), output);
  }

  // bool f_bool = 13;
  if (this->f_bool() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(13, this->f_bool(), output);
  }

  // string f_string = 14;
  if (this->f_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f_string().data(), static_cast<int>(this->f_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test1.f_string");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      14, this->f_string(), output);
  }

  // bytes f_bytes = 15;
  if (this->f_bytes().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      15, this->f_bytes(), output);
  }

  // map<int32, int32> f_map = 16;
  if (!this->f_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->f_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->f_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->f_map().begin();
          it != this->f_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Test1_FMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(f_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            16, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Test1_FMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->f_map().begin();
          it != this->f_map().end(); ++it) {
        entry.reset(f_map_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            16, *entry, output);
      }
    }
  }

  // string f_oneof_f1 = 17;
  if (has_f_oneof_f1()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f_oneof_f1().data(), static_cast<int>(this->f_oneof_f1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test1.f_oneof_f1");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->f_oneof_f1(), output);
  }

  // int32 f_oneof_f2 = 18;
  if (has_f_oneof_f2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->f_oneof_f2(), output);
  }

  // .Test0 f_empty_out = 19;
  if (this->has_f_empty_out()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      19, *f_empty_out_, output);
  }

  // .Enum0 f_enum_out = 20;
  if (this->f_enum_out() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      20, this->f_enum_out(), output);
  }

  // .Test2.TestInner2 f_empty_inner = 21;
  if (this->has_f_empty_inner()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      21, *f_empty_inner_, output);
  }

  // .Test2.TestEnum f_enum_inner = 22;
  if (this->f_enum_inner() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      22, this->f_enum_inner(), output);
  }

  // repeated double rf_double = 23;
  if (this->rf_double_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(23, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_double_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->rf_double().data(), this->rf_double_size(), output);
  }

  // repeated float rf_float = 24;
  if (this->rf_float_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(24, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_float_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFloatArray(
      this->rf_float().data(), this->rf_float_size(), output);
  }

  // repeated int32 rf_int32 = 25;
  if (this->rf_int32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(25, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_int32_cached_byte_size_));
  }
  for (int i = 0, n = this->rf_int32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->rf_int32(i), output);
  }

  // repeated int64 rf_int64 = 26;
  if (this->rf_int64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(26, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_int64_cached_byte_size_));
  }
  for (int i = 0, n = this->rf_int64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64NoTag(
      this->rf_int64(i), output);
  }

  // repeated uint32 rf_uint32 = 27;
  if (this->rf_uint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(27, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_uint32_cached_byte_size_));
  }
  for (int i = 0, n = this->rf_uint32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->rf_uint32(i), output);
  }

  // repeated uint64 rf_uint64 = 28;
  if (this->rf_uint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(28, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_uint64_cached_byte_size_));
  }
  for (int i = 0, n = this->rf_uint64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(
      this->rf_uint64(i), output);
  }

  // repeated sint32 rf_sint32 = 29;
  if (this->rf_sint32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(29, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_sint32_cached_byte_size_));
  }
  for (int i = 0, n = this->rf_sint32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->rf_sint32(i), output);
  }

  // repeated sint64 rf_sint64 = 30;
  if (this->rf_sint64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(30, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_sint64_cached_byte_size_));
  }
  for (int i = 0, n = this->rf_sint64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->rf_sint64(i), output);
  }

  // repeated fixed32 rf_fixed32 = 31;
  if (this->rf_fixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(31, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_fixed32_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed32Array(
      this->rf_fixed32().data(), this->rf_fixed32_size(), output);
  }

  // repeated fixed64 rf_fixed64 = 32;
  if (this->rf_fixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(32, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_fixed64_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteFixed64Array(
      this->rf_fixed64().data(), this->rf_fixed64_size(), output);
  }

  // repeated sfixed32 rf_sfixed32 = 33;
  if (this->rf_sfixed32_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(33, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_sfixed32_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32Array(
      this->rf_sfixed32().data(), this->rf_sfixed32_size(), output);
  }

  // repeated sfixed64 rf_sfixed64 = 34;
  if (this->rf_sfixed64_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(34, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_sfixed64_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64Array(
      this->rf_sfixed64().data(), this->rf_sfixed64_size(), output);
  }

  // repeated bool rf_bool = 35;
  if (this->rf_bool_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(35, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _rf_bool_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteBoolArray(
      this->rf_bool().data(), this->rf_bool_size(), output);
  }

  // repeated string rf_string = 36;
  for (int i = 0, n = this->rf_string_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rf_string(i).data(), static_cast<int>(this->rf_string(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test1.rf_string");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      36, this->rf_string(i), output);
  }

  // repeated bytes rf_bytes = 37;
  for (int i = 0, n = this->rf_bytes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      37, this->rf_bytes(i), output);
  }

  // repeated .Test0 rf_empty_out = 38;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rf_empty_out_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      38,
      this->rf_empty_out(static_cast<int>(i)),
      output);
  }

  // repeated .Enum0 rf_enum_out = 39;
  if (this->rf_enum_out_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      39,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_rf_enum_out_cached_byte_size_));
  }
  for (int i = 0, n = this->rf_enum_out_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->rf_enum_out(i), output);
  }

  // repeated .Test2.TestInner2 rf_empty_inner = 40;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rf_empty_inner_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      40,
      this->rf_empty_inner(static_cast<int>(i)),
      output);
  }

  // repeated .Test2.TestEnum rf_enum_inner = 41;
  if (this->rf_enum_inner_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      41,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(
        static_cast< ::google::protobuf::uint32>(_rf_enum_inner_cached_byte_size_));
  }
  for (int i = 0, n = this->rf_enum_inner_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->rf_enum_inner(i), output);
  }

  // repeated double rfu_double = 42 [packed = false];
  for (int i = 0, n = this->rfu_double_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(
      42, this->rfu_double(i), output);
  }

  // repeated float rfu_float = 43 [packed = false];
  for (int i = 0, n = this->rfu_float_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(
      43, this->rfu_float(i), output);
  }

  // repeated int32 rfu_int32f = 44 [packed = false];
  for (int i = 0, n = this->rfu_int32f_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      44, this->rfu_int32f(i), output);
  }

  // repeated int64 rfu_int64f = 45 [packed = false];
  for (int i = 0, n = this->rfu_int64f_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(
      45, this->rfu_int64f(i), output);
  }

  // repeated uint32 rfu_uint32 = 46 [packed = false];
  for (int i = 0, n = this->rfu_uint32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(
      46, this->rfu_uint32(i), output);
  }

  // repeated uint64 rfu_uint64 = 47 [packed = false];
  for (int i = 0, n = this->rfu_uint64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(
      47, this->rfu_uint64(i), output);
  }

  // repeated sint32 rfu_sint32 = 48 [packed = false];
  for (int i = 0, n = this->rfu_sint32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32(
      48, this->rfu_sint32(i), output);
  }

  // repeated sint64 rfu_sint64 = 49 [packed = false];
  for (int i = 0, n = this->rfu_sint64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(
      49, this->rfu_sint64(i), output);
  }

  // repeated fixed32 rfu_fixed32 = 50 [packed = false];
  for (int i = 0, n = this->rfu_fixed32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed32(
      50, this->rfu_fixed32(i), output);
  }

  // repeated fixed64 rfu_fixed64 = 51 [packed = false];
  for (int i = 0, n = this->rfu_fixed64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(
      51, this->rfu_fixed64(i), output);
  }

  // repeated sfixed32 rfu_sfixed32 = 52 [packed = false];
  for (int i = 0, n = this->rfu_sfixed32_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed32(
      52, this->rfu_sfixed32(i), output);
  }

  // repeated sfixed64 rfu_sfixed64 = 53 [packed = false];
  for (int i = 0, n = this->rfu_sfixed64_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSFixed64(
      53, this->rfu_sfixed64(i), output);
  }

  // repeated bool rfu_bool = 54 [packed = false];
  for (int i = 0, n = this->rfu_bool_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(
      54, this->rfu_bool(i), output);
  }

  // repeated .Test2.TestInner3.TestInner3_2 rf_inner = 55;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rf_inner_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      55,
      this->rf_inner(static_cast<int>(i)),
      output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Test1)
}

::google::protobuf::uint8* Test1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Test1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double f_double = 1;
  if (this->f_double() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(1, this->f_double(), target);
  }

  // float f_float = 2;
  if (this->f_float() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->f_float(), target);
  }

  // int32 f_int32 = 3;
  if (this->f_int32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->f_int32(), target);
  }

  // int64 f_int64 = 4;
  if (this->f_int64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(4, this->f_int64(), target);
  }

  // uint32 f_uint32 = 5;
  if (this->f_uint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(5, this->f_uint32(), target);
  }

  // uint64 f_uint64 = 6;
  if (this->f_uint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->f_uint64(), target);
  }

  // sint32 f_sint32 = 7;
  if (this->f_sint32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(7, this->f_sint32(), target);
  }

  // sint64 f_sint64 = 8;
  if (this->f_sint64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->f_sint64(), target);
  }

  // fixed32 f_fixed32 = 9;
  if (this->f_fixed32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed32ToArray(9, this->f_fixed32(), target);
  }

  // fixed64 f_fixed64 = 10;
  if (this->f_fixed64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(10, this->f_fixed64(), target);
  }

  // sfixed32 f_sfixed32 = 11;
  if (this->f_sfixed32() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed32ToArray(11, this->f_sfixed32(), target);
  }

  // sfixed64 f_sfixed64 = 12;
  if (this->f_sfixed64() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSFixed64ToArray(12, this->f_sfixed64(), target);
  }

  // bool f_bool = 13;
  if (this->f_bool() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(13, this->f_bool(), target);
  }

  // string f_string = 14;
  if (this->f_string().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f_string().data(), static_cast<int>(this->f_string().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test1.f_string");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        14, this->f_string(), target);
  }

  // bytes f_bytes = 15;
  if (this->f_bytes().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        15, this->f_bytes(), target);
  }

  // map<int32, int32> f_map = 16;
  if (!this->f_map().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->f_map().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->f_map().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->f_map().begin();
          it != this->f_map().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Test1_FMapEntry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(f_map_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       16, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Test1_FMapEntry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->f_map().begin();
          it != this->f_map().end(); ++it) {
        entry.reset(f_map_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       16, *entry, deterministic, target);
;
      }
    }
  }

  // string f_oneof_f1 = 17;
  if (has_f_oneof_f1()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f_oneof_f1().data(), static_cast<int>(this->f_oneof_f1().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test1.f_oneof_f1");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->f_oneof_f1(), target);
  }

  // int32 f_oneof_f2 = 18;
  if (has_f_oneof_f2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->f_oneof_f2(), target);
  }

  // .Test0 f_empty_out = 19;
  if (this->has_f_empty_out()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        19, *f_empty_out_, deterministic, target);
  }

  // .Enum0 f_enum_out = 20;
  if (this->f_enum_out() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      20, this->f_enum_out(), target);
  }

  // .Test2.TestInner2 f_empty_inner = 21;
  if (this->has_f_empty_inner()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        21, *f_empty_inner_, deterministic, target);
  }

  // .Test2.TestEnum f_enum_inner = 22;
  if (this->f_enum_inner() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      22, this->f_enum_inner(), target);
  }

  // repeated double rf_double = 23;
  if (this->rf_double_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      23,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_double_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->rf_double_, target);
  }

  // repeated float rf_float = 24;
  if (this->rf_float_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      24,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_float_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFloatNoTagToArray(this->rf_float_, target);
  }

  // repeated int32 rf_int32 = 25;
  if (this->rf_int32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      25,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_int32_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->rf_int32_, target);
  }

  // repeated int64 rf_int64 = 26;
  if (this->rf_int64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      26,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_int64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt64NoTagToArray(this->rf_int64_, target);
  }

  // repeated uint32 rf_uint32 = 27;
  if (this->rf_uint32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      27,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_uint32_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->rf_uint32_, target);
  }

  // repeated uint64 rf_uint64 = 28;
  if (this->rf_uint64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      28,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_uint64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt64NoTagToArray(this->rf_uint64_, target);
  }

  // repeated sint32 rf_sint32 = 29;
  if (this->rf_sint32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      29,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_sint32_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->rf_sint32_, target);
  }

  // repeated sint64 rf_sint64 = 30;
  if (this->rf_sint64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      30,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_sint64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->rf_sint64_, target);
  }

  // repeated fixed32 rf_fixed32 = 31;
  if (this->rf_fixed32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      31,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_fixed32_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed32NoTagToArray(this->rf_fixed32_, target);
  }

  // repeated fixed64 rf_fixed64 = 32;
  if (this->rf_fixed64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      32,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_fixed64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteFixed64NoTagToArray(this->rf_fixed64_, target);
  }

  // repeated sfixed32 rf_sfixed32 = 33;
  if (this->rf_sfixed32_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      33,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_sfixed32_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed32NoTagToArray(this->rf_sfixed32_, target);
  }

  // repeated sfixed64 rf_sfixed64 = 34;
  if (this->rf_sfixed64_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      34,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_sfixed64_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSFixed64NoTagToArray(this->rf_sfixed64_, target);
  }

  // repeated bool rf_bool = 35;
  if (this->rf_bool_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      35,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _rf_bool_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBoolNoTagToArray(this->rf_bool_, target);
  }

  // repeated string rf_string = 36;
  for (int i = 0, n = this->rf_string_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->rf_string(i).data(), static_cast<int>(this->rf_string(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test1.rf_string");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(36, this->rf_string(i), target);
  }

  // repeated bytes rf_bytes = 37;
  for (int i = 0, n = this->rf_bytes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(37, this->rf_bytes(i), target);
  }

  // repeated .Test0 rf_empty_out = 38;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rf_empty_out_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        38, this->rf_empty_out(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Enum0 rf_enum_out = 39;
  if (this->rf_enum_out_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      39,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _rf_enum_out_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->rf_enum_out_, target);
  }

  // repeated .Test2.TestInner2 rf_empty_inner = 40;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rf_empty_inner_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        40, this->rf_empty_inner(static_cast<int>(i)), deterministic, target);
  }

  // repeated .Test2.TestEnum rf_enum_inner = 41;
  if (this->rf_enum_inner_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      41,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(      static_cast< ::google::protobuf::uint32>(
            _rf_enum_inner_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->rf_enum_inner_, target);
  }

  // repeated double rfu_double = 42 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteDoubleToArray(42, this->rfu_double_, target);

  // repeated float rfu_float = 43 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFloatToArray(43, this->rfu_float_, target);

  // repeated int32 rfu_int32f = 44 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt32ToArray(44, this->rfu_int32f_, target);

  // repeated int64 rfu_int64f = 45 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteInt64ToArray(45, this->rfu_int64f_, target);

  // repeated uint32 rfu_uint32 = 46 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt32ToArray(46, this->rfu_uint32_, target);

  // repeated uint64 rfu_uint64 = 47 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteUInt64ToArray(47, this->rfu_uint64_, target);

  // repeated sint32 rfu_sint32 = 48 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt32ToArray(48, this->rfu_sint32_, target);

  // repeated sint64 rfu_sint64 = 49 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSInt64ToArray(49, this->rfu_sint64_, target);

  // repeated fixed32 rfu_fixed32 = 50 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed32ToArray(50, this->rfu_fixed32_, target);

  // repeated fixed64 rfu_fixed64 = 51 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteFixed64ToArray(51, this->rfu_fixed64_, target);

  // repeated sfixed32 rfu_sfixed32 = 52 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSFixed32ToArray(52, this->rfu_sfixed32_, target);

  // repeated sfixed64 rfu_sfixed64 = 53 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteSFixed64ToArray(53, this->rfu_sfixed64_, target);

  // repeated bool rfu_bool = 54 [packed = false];
  target = ::google::protobuf::internal::WireFormatLite::
    WriteBoolToArray(54, this->rfu_bool_, target);

  // repeated .Test2.TestInner3.TestInner3_2 rf_inner = 55;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->rf_inner_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        55, this->rf_inner(static_cast<int>(i)), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Test1)
  return target;
}

size_t Test1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Test1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, int32> f_map = 16;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->f_map_size());
  {
    ::google::protobuf::scoped_ptr<Test1_FMapEntry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->f_map().begin();
        it != this->f_map().end(); ++it) {
      entry.reset(f_map_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // repeated double rf_double = 23;
  {
    unsigned int count = static_cast<unsigned int>(this->rf_double_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_double_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated float rf_float = 24;
  {
    unsigned int count = static_cast<unsigned int>(this->rf_float_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_float_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 rf_int32 = 25;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->rf_int32_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_int32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int64 rf_int64 = 26;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->rf_int64_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_int64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 rf_uint32 = 27;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->rf_uint32_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_uint32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint64 rf_uint64 = 28;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->rf_uint64_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_uint64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 rf_sint32 = 29;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->rf_sint32_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_sint32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 rf_sint64 = 30;
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->rf_sint64_);
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_sint64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed32 rf_fixed32 = 31;
  {
    unsigned int count = static_cast<unsigned int>(this->rf_fixed32_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_fixed32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated fixed64 rf_fixed64 = 32;
  {
    unsigned int count = static_cast<unsigned int>(this->rf_fixed64_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_fixed64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed32 rf_sfixed32 = 33;
  {
    unsigned int count = static_cast<unsigned int>(this->rf_sfixed32_size());
    size_t data_size = 4UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_sfixed32_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sfixed64 rf_sfixed64 = 34;
  {
    unsigned int count = static_cast<unsigned int>(this->rf_sfixed64_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_sfixed64_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated bool rf_bool = 35;
  {
    unsigned int count = static_cast<unsigned int>(this->rf_bool_size());
    size_t data_size = 1UL * count;
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_bool_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated string rf_string = 36;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->rf_string_size());
  for (int i = 0, n = this->rf_string_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->rf_string(i));
  }

  // repeated bytes rf_bytes = 37;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->rf_bytes_size());
  for (int i = 0, n = this->rf_bytes_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->rf_bytes(i));
  }

  // repeated .Test0 rf_empty_out = 38;
  {
    unsigned int count = static_cast<unsigned int>(this->rf_empty_out_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rf_empty_out(static_cast<int>(i)));
    }
  }

  // repeated .Enum0 rf_enum_out = 39;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->rf_enum_out_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->rf_enum_out(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_enum_out_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .Test2.TestInner2 rf_empty_inner = 40;
  {
    unsigned int count = static_cast<unsigned int>(this->rf_empty_inner_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rf_empty_inner(static_cast<int>(i)));
    }
  }

  // repeated .Test2.TestEnum rf_enum_inner = 41;
  {
    size_t data_size = 0;
    unsigned int count = static_cast<unsigned int>(this->rf_enum_inner_size());for (unsigned int i = 0; i < count; i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->rf_enum_inner(static_cast<int>(i)));
    }
    if (data_size > 0) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _rf_enum_inner_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated double rfu_double = 42 [packed = false];
  {
    unsigned int count = static_cast<unsigned int>(this->rfu_double_size());
    size_t data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_double_size());
    total_size += data_size;
  }

  // repeated float rfu_float = 43 [packed = false];
  {
    unsigned int count = static_cast<unsigned int>(this->rfu_float_size());
    size_t data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_float_size());
    total_size += data_size;
  }

  // repeated int32 rfu_int32f = 44 [packed = false];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int32Size(this->rfu_int32f_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_int32f_size());
    total_size += data_size;
  }

  // repeated int64 rfu_int64f = 45 [packed = false];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      Int64Size(this->rfu_int64f_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_int64f_size());
    total_size += data_size;
  }

  // repeated uint32 rfu_uint32 = 46 [packed = false];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt32Size(this->rfu_uint32_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_uint32_size());
    total_size += data_size;
  }

  // repeated uint64 rfu_uint64 = 47 [packed = false];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      UInt64Size(this->rfu_uint64_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_uint64_size());
    total_size += data_size;
  }

  // repeated sint32 rfu_sint32 = 48 [packed = false];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt32Size(this->rfu_sint32_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_sint32_size());
    total_size += data_size;
  }

  // repeated sint64 rfu_sint64 = 49 [packed = false];
  {
    size_t data_size = ::google::protobuf::internal::WireFormatLite::
      SInt64Size(this->rfu_sint64_);
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_sint64_size());
    total_size += data_size;
  }

  // repeated fixed32 rfu_fixed32 = 50 [packed = false];
  {
    unsigned int count = static_cast<unsigned int>(this->rfu_fixed32_size());
    size_t data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_fixed32_size());
    total_size += data_size;
  }

  // repeated fixed64 rfu_fixed64 = 51 [packed = false];
  {
    unsigned int count = static_cast<unsigned int>(this->rfu_fixed64_size());
    size_t data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_fixed64_size());
    total_size += data_size;
  }

  // repeated sfixed32 rfu_sfixed32 = 52 [packed = false];
  {
    unsigned int count = static_cast<unsigned int>(this->rfu_sfixed32_size());
    size_t data_size = 4UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_sfixed32_size());
    total_size += data_size;
  }

  // repeated sfixed64 rfu_sfixed64 = 53 [packed = false];
  {
    unsigned int count = static_cast<unsigned int>(this->rfu_sfixed64_size());
    size_t data_size = 8UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_sfixed64_size());
    total_size += data_size;
  }

  // repeated bool rfu_bool = 54 [packed = false];
  {
    unsigned int count = static_cast<unsigned int>(this->rfu_bool_size());
    size_t data_size = 1UL * count;
    total_size += 2 *
                  ::google::protobuf::internal::FromIntSize(this->rfu_bool_size());
    total_size += data_size;
  }

  // repeated .Test2.TestInner3.TestInner3_2 rf_inner = 55;
  {
    unsigned int count = static_cast<unsigned int>(this->rf_inner_size());
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          this->rf_inner(static_cast<int>(i)));
    }
  }

  // string f_string = 14;
  if (this->f_string().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->f_string());
  }

  // bytes f_bytes = 15;
  if (this->f_bytes().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->f_bytes());
  }

  // .Test0 f_empty_out = 19;
  if (this->has_f_empty_out()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *f_empty_out_);
  }

  // .Test2.TestInner2 f_empty_inner = 21;
  if (this->has_f_empty_inner()) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *f_empty_inner_);
  }

  // double f_double = 1;
  if (this->f_double() != 0) {
    total_size += 1 + 8;
  }

  // float f_float = 2;
  if (this->f_float() != 0) {
    total_size += 1 + 4;
  }

  // int32 f_int32 = 3;
  if (this->f_int32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f_int32());
  }

  // int64 f_int64 = 4;
  if (this->f_int64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->f_int64());
  }

  // uint64 f_uint64 = 6;
  if (this->f_uint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->f_uint64());
  }

  // uint32 f_uint32 = 5;
  if (this->f_uint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->f_uint32());
  }

  // sint32 f_sint32 = 7;
  if (this->f_sint32() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt32Size(
        this->f_sint32());
  }

  // sint64 f_sint64 = 8;
  if (this->f_sint64() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->f_sint64());
  }

  // fixed64 f_fixed64 = 10;
  if (this->f_fixed64() != 0) {
    total_size += 1 + 8;
  }

  // fixed32 f_fixed32 = 9;
  if (this->f_fixed32() != 0) {
    total_size += 1 + 4;
  }

  // sfixed32 f_sfixed32 = 11;
  if (this->f_sfixed32() != 0) {
    total_size += 1 + 4;
  }

  // sfixed64 f_sfixed64 = 12;
  if (this->f_sfixed64() != 0) {
    total_size += 1 + 8;
  }

  // bool f_bool = 13;
  if (this->f_bool() != 0) {
    total_size += 1 + 1;
  }

  // .Enum0 f_enum_out = 20;
  if (this->f_enum_out() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->f_enum_out());
  }

  // .Test2.TestEnum f_enum_inner = 22;
  if (this->f_enum_inner() != 0) {
    total_size += 2 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->f_enum_inner());
  }

  switch (f_oneof_case()) {
    // string f_oneof_f1 = 17;
    case kFOneofF1: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->f_oneof_f1());
      break;
    }
    // int32 f_oneof_f2 = 18;
    case kFOneofF2: {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->f_oneof_f2());
      break;
    }
    case F_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Test1)
  GOOGLE_DCHECK_NE(&from, this);
  const Test1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Test1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Test1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Test1)
    MergeFrom(*source);
  }
}

void Test1::MergeFrom(const Test1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Test1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f_map_.MergeFrom(from.f_map_);
  rf_double_.MergeFrom(from.rf_double_);
  rf_float_.MergeFrom(from.rf_float_);
  rf_int32_.MergeFrom(from.rf_int32_);
  rf_int64_.MergeFrom(from.rf_int64_);
  rf_uint32_.MergeFrom(from.rf_uint32_);
  rf_uint64_.MergeFrom(from.rf_uint64_);
  rf_sint32_.MergeFrom(from.rf_sint32_);
  rf_sint64_.MergeFrom(from.rf_sint64_);
  rf_fixed32_.MergeFrom(from.rf_fixed32_);
  rf_fixed64_.MergeFrom(from.rf_fixed64_);
  rf_sfixed32_.MergeFrom(from.rf_sfixed32_);
  rf_sfixed64_.MergeFrom(from.rf_sfixed64_);
  rf_bool_.MergeFrom(from.rf_bool_);
  rf_string_.MergeFrom(from.rf_string_);
  rf_bytes_.MergeFrom(from.rf_bytes_);
  rf_empty_out_.MergeFrom(from.rf_empty_out_);
  rf_enum_out_.MergeFrom(from.rf_enum_out_);
  rf_empty_inner_.MergeFrom(from.rf_empty_inner_);
  rf_enum_inner_.MergeFrom(from.rf_enum_inner_);
  rfu_double_.MergeFrom(from.rfu_double_);
  rfu_float_.MergeFrom(from.rfu_float_);
  rfu_int32f_.MergeFrom(from.rfu_int32f_);
  rfu_int64f_.MergeFrom(from.rfu_int64f_);
  rfu_uint32_.MergeFrom(from.rfu_uint32_);
  rfu_uint64_.MergeFrom(from.rfu_uint64_);
  rfu_sint32_.MergeFrom(from.rfu_sint32_);
  rfu_sint64_.MergeFrom(from.rfu_sint64_);
  rfu_fixed32_.MergeFrom(from.rfu_fixed32_);
  rfu_fixed64_.MergeFrom(from.rfu_fixed64_);
  rfu_sfixed32_.MergeFrom(from.rfu_sfixed32_);
  rfu_sfixed64_.MergeFrom(from.rfu_sfixed64_);
  rfu_bool_.MergeFrom(from.rfu_bool_);
  rf_inner_.MergeFrom(from.rf_inner_);
  if (from.f_string().size() > 0) {

    f_string_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f_string_);
  }
  if (from.f_bytes().size() > 0) {

    f_bytes_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f_bytes_);
  }
  if (from.has_f_empty_out()) {
    mutable_f_empty_out()->::Test0::MergeFrom(from.f_empty_out());
  }
  if (from.has_f_empty_inner()) {
    mutable_f_empty_inner()->::Test2_TestInner2::MergeFrom(from.f_empty_inner());
  }
  if (from.f_double() != 0) {
    set_f_double(from.f_double());
  }
  if (from.f_float() != 0) {
    set_f_float(from.f_float());
  }
  if (from.f_int32() != 0) {
    set_f_int32(from.f_int32());
  }
  if (from.f_int64() != 0) {
    set_f_int64(from.f_int64());
  }
  if (from.f_uint64() != 0) {
    set_f_uint64(from.f_uint64());
  }
  if (from.f_uint32() != 0) {
    set_f_uint32(from.f_uint32());
  }
  if (from.f_sint32() != 0) {
    set_f_sint32(from.f_sint32());
  }
  if (from.f_sint64() != 0) {
    set_f_sint64(from.f_sint64());
  }
  if (from.f_fixed64() != 0) {
    set_f_fixed64(from.f_fixed64());
  }
  if (from.f_fixed32() != 0) {
    set_f_fixed32(from.f_fixed32());
  }
  if (from.f_sfixed32() != 0) {
    set_f_sfixed32(from.f_sfixed32());
  }
  if (from.f_sfixed64() != 0) {
    set_f_sfixed64(from.f_sfixed64());
  }
  if (from.f_bool() != 0) {
    set_f_bool(from.f_bool());
  }
  if (from.f_enum_out() != 0) {
    set_f_enum_out(from.f_enum_out());
  }
  if (from.f_enum_inner() != 0) {
    set_f_enum_inner(from.f_enum_inner());
  }
  switch (from.f_oneof_case()) {
    case kFOneofF1: {
      set_f_oneof_f1(from.f_oneof_f1());
      break;
    }
    case kFOneofF2: {
      set_f_oneof_f2(from.f_oneof_f2());
      break;
    }
    case F_ONEOF_NOT_SET: {
      break;
    }
  }
}

void Test1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Test1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test1::CopyFrom(const Test1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Test1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test1::IsInitialized() const {
  return true;
}

void Test1::Swap(Test1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test1::InternalSwap(Test1* other) {
  using std::swap;
  f_map_.Swap(&other->f_map_);
  rf_double_.InternalSwap(&other->rf_double_);
  rf_float_.InternalSwap(&other->rf_float_);
  rf_int32_.InternalSwap(&other->rf_int32_);
  rf_int64_.InternalSwap(&other->rf_int64_);
  rf_uint32_.InternalSwap(&other->rf_uint32_);
  rf_uint64_.InternalSwap(&other->rf_uint64_);
  rf_sint32_.InternalSwap(&other->rf_sint32_);
  rf_sint64_.InternalSwap(&other->rf_sint64_);
  rf_fixed32_.InternalSwap(&other->rf_fixed32_);
  rf_fixed64_.InternalSwap(&other->rf_fixed64_);
  rf_sfixed32_.InternalSwap(&other->rf_sfixed32_);
  rf_sfixed64_.InternalSwap(&other->rf_sfixed64_);
  rf_bool_.InternalSwap(&other->rf_bool_);
  rf_string_.InternalSwap(CastToBase(&other->rf_string_));
  rf_bytes_.InternalSwap(CastToBase(&other->rf_bytes_));
  CastToBase(&rf_empty_out_)->InternalSwap(CastToBase(&other->rf_empty_out_));
  rf_enum_out_.InternalSwap(&other->rf_enum_out_);
  CastToBase(&rf_empty_inner_)->InternalSwap(CastToBase(&other->rf_empty_inner_));
  rf_enum_inner_.InternalSwap(&other->rf_enum_inner_);
  rfu_double_.InternalSwap(&other->rfu_double_);
  rfu_float_.InternalSwap(&other->rfu_float_);
  rfu_int32f_.InternalSwap(&other->rfu_int32f_);
  rfu_int64f_.InternalSwap(&other->rfu_int64f_);
  rfu_uint32_.InternalSwap(&other->rfu_uint32_);
  rfu_uint64_.InternalSwap(&other->rfu_uint64_);
  rfu_sint32_.InternalSwap(&other->rfu_sint32_);
  rfu_sint64_.InternalSwap(&other->rfu_sint64_);
  rfu_fixed32_.InternalSwap(&other->rfu_fixed32_);
  rfu_fixed64_.InternalSwap(&other->rfu_fixed64_);
  rfu_sfixed32_.InternalSwap(&other->rfu_sfixed32_);
  rfu_sfixed64_.InternalSwap(&other->rfu_sfixed64_);
  rfu_bool_.InternalSwap(&other->rfu_bool_);
  CastToBase(&rf_inner_)->InternalSwap(CastToBase(&other->rf_inner_));
  f_string_.Swap(&other->f_string_);
  f_bytes_.Swap(&other->f_bytes_);
  swap(f_empty_out_, other->f_empty_out_);
  swap(f_empty_inner_, other->f_empty_inner_);
  swap(f_double_, other->f_double_);
  swap(f_float_, other->f_float_);
  swap(f_int32_, other->f_int32_);
  swap(f_int64_, other->f_int64_);
  swap(f_uint64_, other->f_uint64_);
  swap(f_uint32_, other->f_uint32_);
  swap(f_sint32_, other->f_sint32_);
  swap(f_sint64_, other->f_sint64_);
  swap(f_fixed64_, other->f_fixed64_);
  swap(f_fixed32_, other->f_fixed32_);
  swap(f_sfixed32_, other->f_sfixed32_);
  swap(f_sfixed64_, other->f_sfixed64_);
  swap(f_bool_, other->f_bool_);
  swap(f_enum_out_, other->f_enum_out_);
  swap(f_enum_inner_, other->f_enum_inner_);
  swap(f_oneof_, other->f_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test1::GetMetadata() const {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Test2_TestInner1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Test2_TestInner1::kF1FieldNumber;
const int Test2_TestInner1::kF2FieldNumber;
const int Test2_TestInner1::kF3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Test2_TestInner1::Test2_TestInner1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test2.TestInner1)
}
Test2_TestInner1::Test2_TestInner1(const Test2_TestInner1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      f1_(from.f1_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  f3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.f3().size() > 0) {
    f3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f3_);
  }
  f2_ = from.f2_;
  // @@protoc_insertion_point(copy_constructor:Test2.TestInner1)
}

void Test2_TestInner1::SharedCtor() {
  f3_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  f2_ = 0;
  _cached_size_ = 0;
}

Test2_TestInner1::~Test2_TestInner1() {
  // @@protoc_insertion_point(destructor:Test2.TestInner1)
  SharedDtor();
}

void Test2_TestInner1::SharedDtor() {
  f3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Test2_TestInner1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test2_TestInner1::descriptor() {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Test2_TestInner1& Test2_TestInner1::default_instance() {
  ::protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner1();
  return *internal_default_instance();
}


void Test2_TestInner1::Clear() {
// @@protoc_insertion_point(message_clear_start:Test2.TestInner1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f1_.Clear();
  f3_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  f2_ = 0;
  _internal_metadata_.Clear();
}

bool Test2_TestInner1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test2.TestInner1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated double f1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, this->mutable_f1())));
        } else if (
            static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(9u /* 9 & 0xFF */)) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 1, 10u, input, this->mutable_f1())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // float f2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &f2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string f3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_f3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->f3().data(), static_cast<int>(this->f3().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Test2.TestInner1.f3"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test2.TestInner1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test2.TestInner1)
  return false;
#undef DO_
}

void Test2_TestInner1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test2.TestInner1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double f1 = 1;
  if (this->f1_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(static_cast< ::google::protobuf::uint32>(
        _f1_cached_byte_size_));
    ::google::protobuf::internal::WireFormatLite::WriteDoubleArray(
      this->f1().data(), this->f1_size(), output);
  }

  // float f2 = 2;
  if (this->f2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->f2(), output);
  }

  // string f3 = 3;
  if (this->f3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f3().data(), static_cast<int>(this->f3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test2.TestInner1.f3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->f3(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Test2.TestInner1)
}

::google::protobuf::uint8* Test2_TestInner1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Test2.TestInner1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated double f1 = 1;
  if (this->f1_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
        static_cast< ::google::protobuf::int32>(
            _f1_cached_byte_size_), target);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteDoubleNoTagToArray(this->f1_, target);
  }

  // float f2 = 2;
  if (this->f2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->f2(), target);
  }

  // string f3 = 3;
  if (this->f3().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f3().data(), static_cast<int>(this->f3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test2.TestInner1.f3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->f3(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Test2.TestInner1)
  return target;
}

size_t Test2_TestInner1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Test2.TestInner1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated double f1 = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->f1_size());
    size_t data_size = 8UL * count;
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
            static_cast< ::google::protobuf::int32>(data_size));
    }
    int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _f1_cached_byte_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // string f3 = 3;
  if (this->f3().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->f3());
  }

  // float f2 = 2;
  if (this->f2() != 0) {
    total_size += 1 + 4;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test2_TestInner1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Test2.TestInner1)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2_TestInner1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Test2_TestInner1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Test2.TestInner1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Test2.TestInner1)
    MergeFrom(*source);
  }
}

void Test2_TestInner1::MergeFrom(const Test2_TestInner1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Test2.TestInner1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f1_.MergeFrom(from.f1_);
  if (from.f3().size() > 0) {

    f3_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f3_);
  }
  if (from.f2() != 0) {
    set_f2(from.f2());
  }
}

void Test2_TestInner1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Test2.TestInner1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2_TestInner1::CopyFrom(const Test2_TestInner1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Test2.TestInner1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2_TestInner1::IsInitialized() const {
  return true;
}

void Test2_TestInner1::Swap(Test2_TestInner1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test2_TestInner1::InternalSwap(Test2_TestInner1* other) {
  using std::swap;
  f1_.InternalSwap(&other->f1_);
  f3_.Swap(&other->f3_);
  swap(f2_, other->f2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test2_TestInner1::GetMetadata() const {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Test2_TestInner2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Test2_TestInner2::Test2_TestInner2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test2.TestInner2)
}
Test2_TestInner2::Test2_TestInner2(const Test2_TestInner2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Test2.TestInner2)
}

void Test2_TestInner2::SharedCtor() {
  _cached_size_ = 0;
}

Test2_TestInner2::~Test2_TestInner2() {
  // @@protoc_insertion_point(destructor:Test2.TestInner2)
  SharedDtor();
}

void Test2_TestInner2::SharedDtor() {
}

void Test2_TestInner2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test2_TestInner2::descriptor() {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Test2_TestInner2& Test2_TestInner2::default_instance() {
  ::protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner2();
  return *internal_default_instance();
}


void Test2_TestInner2::Clear() {
// @@protoc_insertion_point(message_clear_start:Test2.TestInner2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Test2_TestInner2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test2.TestInner2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Test2.TestInner2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test2.TestInner2)
  return false;
#undef DO_
}

void Test2_TestInner2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test2.TestInner2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Test2.TestInner2)
}

::google::protobuf::uint8* Test2_TestInner2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Test2.TestInner2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Test2.TestInner2)
  return target;
}

size_t Test2_TestInner2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Test2.TestInner2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test2_TestInner2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Test2.TestInner2)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2_TestInner2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Test2_TestInner2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Test2.TestInner2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Test2.TestInner2)
    MergeFrom(*source);
  }
}

void Test2_TestInner2::MergeFrom(const Test2_TestInner2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Test2.TestInner2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test2_TestInner2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Test2.TestInner2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2_TestInner2::CopyFrom(const Test2_TestInner2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Test2.TestInner2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2_TestInner2::IsInitialized() const {
  return true;
}

void Test2_TestInner2::Swap(Test2_TestInner2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test2_TestInner2::InternalSwap(Test2_TestInner2* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test2_TestInner2::GetMetadata() const {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Test2_TestInner3_TestInner3_1::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Test2_TestInner3_TestInner3_1::Test2_TestInner3_TestInner3_1()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3_TestInner3_1();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test2.TestInner3.TestInner3_1)
}
Test2_TestInner3_TestInner3_1::Test2_TestInner3_TestInner3_1(const Test2_TestInner3_TestInner3_1& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Test2.TestInner3.TestInner3_1)
}

void Test2_TestInner3_TestInner3_1::SharedCtor() {
  _cached_size_ = 0;
}

Test2_TestInner3_TestInner3_1::~Test2_TestInner3_TestInner3_1() {
  // @@protoc_insertion_point(destructor:Test2.TestInner3.TestInner3_1)
  SharedDtor();
}

void Test2_TestInner3_TestInner3_1::SharedDtor() {
}

void Test2_TestInner3_TestInner3_1::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test2_TestInner3_TestInner3_1::descriptor() {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Test2_TestInner3_TestInner3_1& Test2_TestInner3_TestInner3_1::default_instance() {
  ::protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3_TestInner3_1();
  return *internal_default_instance();
}


void Test2_TestInner3_TestInner3_1::Clear() {
// @@protoc_insertion_point(message_clear_start:Test2.TestInner3.TestInner3_1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear();
}

bool Test2_TestInner3_TestInner3_1::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test2.TestInner3.TestInner3_1)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
  handle_unusual:
    if (tag == 0) {
      goto success;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, _internal_metadata_.mutable_unknown_fields()));
  }
success:
  // @@protoc_insertion_point(parse_success:Test2.TestInner3.TestInner3_1)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test2.TestInner3.TestInner3_1)
  return false;
#undef DO_
}

void Test2_TestInner3_TestInner3_1::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test2.TestInner3.TestInner3_1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Test2.TestInner3.TestInner3_1)
}

::google::protobuf::uint8* Test2_TestInner3_TestInner3_1::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Test2.TestInner3.TestInner3_1)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Test2.TestInner3.TestInner3_1)
  return target;
}

size_t Test2_TestInner3_TestInner3_1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Test2.TestInner3.TestInner3_1)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test2_TestInner3_TestInner3_1::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Test2.TestInner3.TestInner3_1)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2_TestInner3_TestInner3_1* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Test2_TestInner3_TestInner3_1>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Test2.TestInner3.TestInner3_1)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Test2.TestInner3.TestInner3_1)
    MergeFrom(*source);
  }
}

void Test2_TestInner3_TestInner3_1::MergeFrom(const Test2_TestInner3_TestInner3_1& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Test2.TestInner3.TestInner3_1)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void Test2_TestInner3_TestInner3_1::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Test2.TestInner3.TestInner3_1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2_TestInner3_TestInner3_1::CopyFrom(const Test2_TestInner3_TestInner3_1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Test2.TestInner3.TestInner3_1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2_TestInner3_TestInner3_1::IsInitialized() const {
  return true;
}

void Test2_TestInner3_TestInner3_1::Swap(Test2_TestInner3_TestInner3_1* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test2_TestInner3_TestInner3_1::InternalSwap(Test2_TestInner3_TestInner3_1* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test2_TestInner3_TestInner3_1::GetMetadata() const {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Test2_TestInner3_TestInner3_2::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Test2_TestInner3_TestInner3_2::kF1FieldNumber;
const int Test2_TestInner3_TestInner3_2::kF2FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Test2_TestInner3_TestInner3_2::Test2_TestInner3_TestInner3_2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3_TestInner3_2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test2.TestInner3.TestInner3_2)
}
Test2_TestInner3_TestInner3_2::Test2_TestInner3_TestInner3_2(const Test2_TestInner3_TestInner3_2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&f2_, &from.f2_,
    static_cast<size_t>(reinterpret_cast<char*>(&f1_) -
    reinterpret_cast<char*>(&f2_)) + sizeof(f1_));
  // @@protoc_insertion_point(copy_constructor:Test2.TestInner3.TestInner3_2)
}

void Test2_TestInner3_TestInner3_2::SharedCtor() {
  ::memset(&f2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f1_) -
      reinterpret_cast<char*>(&f2_)) + sizeof(f1_));
  _cached_size_ = 0;
}

Test2_TestInner3_TestInner3_2::~Test2_TestInner3_TestInner3_2() {
  // @@protoc_insertion_point(destructor:Test2.TestInner3.TestInner3_2)
  SharedDtor();
}

void Test2_TestInner3_TestInner3_2::SharedDtor() {
}

void Test2_TestInner3_TestInner3_2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test2_TestInner3_TestInner3_2::descriptor() {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Test2_TestInner3_TestInner3_2& Test2_TestInner3_TestInner3_2::default_instance() {
  ::protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3_TestInner3_2();
  return *internal_default_instance();
}


void Test2_TestInner3_TestInner3_2::Clear() {
// @@protoc_insertion_point(message_clear_start:Test2.TestInner3.TestInner3_2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&f2_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f1_) -
      reinterpret_cast<char*>(&f2_)) + sizeof(f1_));
  _internal_metadata_.Clear();
}

bool Test2_TestInner3_TestInner3_2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test2.TestInner3.TestInner3_2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 f1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint64 f2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &f2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test2.TestInner3.TestInner3_2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test2.TestInner3.TestInner3_2)
  return false;
#undef DO_
}

void Test2_TestInner3_TestInner3_2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test2.TestInner3.TestInner3_2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 f1 = 1;
  if (this->f1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->f1(), output);
  }

  // uint64 f2 = 2;
  if (this->f2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->f2(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Test2.TestInner3.TestInner3_2)
}

::google::protobuf::uint8* Test2_TestInner3_TestInner3_2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Test2.TestInner3.TestInner3_2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 f1 = 1;
  if (this->f1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->f1(), target);
  }

  // uint64 f2 = 2;
  if (this->f2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->f2(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Test2.TestInner3.TestInner3_2)
  return target;
}

size_t Test2_TestInner3_TestInner3_2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Test2.TestInner3.TestInner3_2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // uint64 f2 = 2;
  if (this->f2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt64Size(
        this->f2());
  }

  // int32 f1 = 1;
  if (this->f1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f1());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test2_TestInner3_TestInner3_2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Test2.TestInner3.TestInner3_2)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2_TestInner3_TestInner3_2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Test2_TestInner3_TestInner3_2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Test2.TestInner3.TestInner3_2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Test2.TestInner3.TestInner3_2)
    MergeFrom(*source);
  }
}

void Test2_TestInner3_TestInner3_2::MergeFrom(const Test2_TestInner3_TestInner3_2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Test2.TestInner3.TestInner3_2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.f2() != 0) {
    set_f2(from.f2());
  }
  if (from.f1() != 0) {
    set_f1(from.f1());
  }
}

void Test2_TestInner3_TestInner3_2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Test2.TestInner3.TestInner3_2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2_TestInner3_TestInner3_2::CopyFrom(const Test2_TestInner3_TestInner3_2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Test2.TestInner3.TestInner3_2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2_TestInner3_TestInner3_2::IsInitialized() const {
  return true;
}

void Test2_TestInner3_TestInner3_2::Swap(Test2_TestInner3_TestInner3_2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test2_TestInner3_TestInner3_2::InternalSwap(Test2_TestInner3_TestInner3_2* other) {
  using std::swap;
  swap(f2_, other->f2_);
  swap(f1_, other->f1_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test2_TestInner3_TestInner3_2::GetMetadata() const {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Test2_TestInner3_F1Entry_DoNotUse::Test2_TestInner3_F1Entry_DoNotUse() {}
Test2_TestInner3_F1Entry_DoNotUse::Test2_TestInner3_F1Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Test2_TestInner3_F1Entry_DoNotUse::MergeFrom(const Test2_TestInner3_F1Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Test2_TestInner3_F1Entry_DoNotUse::GetMetadata() const {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[7];
}
void Test2_TestInner3_F1Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Test2_TestInner3::InitAsDefaultInstance() {
  ::_Test2_TestInner3_default_instance_._instance.get_mutable()->f3_ = const_cast< ::Test2_TestInner3_TestInner3_1*>(
      ::Test2_TestInner3_TestInner3_1::internal_default_instance());
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Test2_TestInner3::kF1FieldNumber;
const int Test2_TestInner3::kF2FieldNumber;
const int Test2_TestInner3::kF3FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Test2_TestInner3::Test2_TestInner3()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test2.TestInner3)
}
Test2_TestInner3::Test2_TestInner3(const Test2_TestInner3& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  f1_.MergeFrom(from.f1_);
  if (from.has_f3()) {
    f3_ = new ::Test2_TestInner3_TestInner3_1(*from.f3_);
  } else {
    f3_ = NULL;
  }
  f2_ = from.f2_;
  // @@protoc_insertion_point(copy_constructor:Test2.TestInner3)
}

void Test2_TestInner3::SharedCtor() {
  ::memset(&f3_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f2_) -
      reinterpret_cast<char*>(&f3_)) + sizeof(f2_));
  _cached_size_ = 0;
}

Test2_TestInner3::~Test2_TestInner3() {
  // @@protoc_insertion_point(destructor:Test2.TestInner3)
  SharedDtor();
}

void Test2_TestInner3::SharedDtor() {
  if (this != internal_default_instance()) delete f3_;
}

void Test2_TestInner3::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test2_TestInner3::descriptor() {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Test2_TestInner3& Test2_TestInner3::default_instance() {
  ::protobuf_pbtest3_2eproto::InitDefaultsTest2_TestInner3();
  return *internal_default_instance();
}


void Test2_TestInner3::Clear() {
// @@protoc_insertion_point(message_clear_start:Test2.TestInner3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f1_.Clear();
  if (GetArenaNoVirtual() == NULL && f3_ != NULL) {
    delete f3_;
  }
  f3_ = NULL;
  f2_ = 0;
  _internal_metadata_.Clear();
}

bool Test2_TestInner3::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test2.TestInner3)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // map<string, .Test2.TestInner3.TestInner3_2> f1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          Test2_TestInner3_F1Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Test2_TestInner3_F1Entry_DoNotUse,
              ::std::string, ::Test2_TestInner3_TestInner3_2,
              ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
              ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
              0 >,
            ::google::protobuf::Map< ::std::string, ::Test2_TestInner3_TestInner3_2 > > parser(&f1_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            parser.key().data(), static_cast<int>(parser.key().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Test2.TestInner3.F1Entry.key"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Test2.TestEnum f2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_f2(static_cast< ::Test2_TestEnum >(value));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Test2.TestInner3.TestInner3_1 f3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f3()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test2.TestInner3)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test2.TestInner3)
  return false;
#undef DO_
}

void Test2_TestInner3::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test2.TestInner3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .Test2.TestInner3.TestInner3_2> f1 = 1;
  if (!this->f1().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::Test2_TestInner3_TestInner3_2 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Test2.TestInner3.F1Entry.key");
      }
    };

    if (output->IsSerializationDeterministic() &&
        this->f1().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->f1().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::Test2_TestInner3_TestInner3_2 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::Test2_TestInner3_TestInner3_2 >::const_iterator
          it = this->f1().begin();
          it != this->f1().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Test2_TestInner3_F1Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(f1_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Test2_TestInner3_F1Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::Test2_TestInner3_TestInner3_2 >::const_iterator
          it = this->f1().begin();
          it != this->f1().end(); ++it) {
        entry.reset(f1_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            1, *entry, output);
        Utf8Check::Check(&*it);
      }
    }
  }

  // .Test2.TestEnum f2 = 2;
  if (this->f2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->f2(), output);
  }

  // .Test2.TestInner3.TestInner3_1 f3 = 3;
  if (this->has_f3()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, *f3_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Test2.TestInner3)
}

::google::protobuf::uint8* Test2_TestInner3::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Test2.TestInner3)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, .Test2.TestInner3.TestInner3_2> f1 = 1;
  if (!this->f1().empty()) {
    typedef ::google::protobuf::Map< ::std::string, ::Test2_TestInner3_TestInner3_2 >::const_pointer
        ConstPtr;
    typedef ConstPtr SortItem;
    typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
    struct Utf8Check {
      static void Check(ConstPtr p) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          p->first.data(), static_cast<int>(p->first.length()),
          ::google::protobuf::internal::WireFormatLite::SERIALIZE,
          "Test2.TestInner3.F1Entry.key");
      }
    };

    if (deterministic &&
        this->f1().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->f1().size()]);
      typedef ::google::protobuf::Map< ::std::string, ::Test2_TestInner3_TestInner3_2 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::std::string, ::Test2_TestInner3_TestInner3_2 >::const_iterator
          it = this->f1().begin();
          it != this->f1().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Test2_TestInner3_F1Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(f1_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)]->first, items[static_cast<ptrdiff_t>(i)]->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
      }
    } else {
      ::google::protobuf::scoped_ptr<Test2_TestInner3_F1Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::std::string, ::Test2_TestInner3_TestInner3_2 >::const_iterator
          it = this->f1().begin();
          it != this->f1().end(); ++it) {
        entry.reset(f1_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       1, *entry, deterministic, target);
;
        Utf8Check::Check(&*it);
      }
    }
  }

  // .Test2.TestEnum f2 = 2;
  if (this->f2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->f2(), target);
  }

  // .Test2.TestInner3.TestInner3_1 f3 = 3;
  if (this->has_f3()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, *f3_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Test2.TestInner3)
  return target;
}

size_t Test2_TestInner3::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Test2.TestInner3)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<string, .Test2.TestInner3.TestInner3_2> f1 = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->f1_size());
  {
    ::google::protobuf::scoped_ptr<Test2_TestInner3_F1Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::std::string, ::Test2_TestInner3_TestInner3_2 >::const_iterator
        it = this->f1().begin();
        it != this->f1().end(); ++it) {
      entry.reset(f1_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // .Test2.TestInner3.TestInner3_1 f3 = 3;
  if (this->has_f3()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *f3_);
  }

  // .Test2.TestEnum f2 = 2;
  if (this->f2() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->f2());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test2_TestInner3::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Test2.TestInner3)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2_TestInner3* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Test2_TestInner3>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Test2.TestInner3)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Test2.TestInner3)
    MergeFrom(*source);
  }
}

void Test2_TestInner3::MergeFrom(const Test2_TestInner3& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Test2.TestInner3)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f1_.MergeFrom(from.f1_);
  if (from.has_f3()) {
    mutable_f3()->::Test2_TestInner3_TestInner3_1::MergeFrom(from.f3());
  }
  if (from.f2() != 0) {
    set_f2(from.f2());
  }
}

void Test2_TestInner3::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Test2.TestInner3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2_TestInner3::CopyFrom(const Test2_TestInner3& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Test2.TestInner3)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2_TestInner3::IsInitialized() const {
  return true;
}

void Test2_TestInner3::Swap(Test2_TestInner3* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test2_TestInner3::InternalSwap(Test2_TestInner3* other) {
  using std::swap;
  f1_.Swap(&other->f1_);
  swap(f3_, other->f3_);
  swap(f2_, other->f2_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test2_TestInner3::GetMetadata() const {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void Test2::InitAsDefaultInstance() {
  ::_Test2_default_instance_.f3_.UnsafeSetDefault(
      &::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::_Test2_default_instance_.f4_ = const_cast< ::Test2_TestInner3*>(
      ::Test2_TestInner3::internal_default_instance());
  ::_Test2_default_instance_._instance.get_mutable()->f5_ = const_cast< ::Test2_TestInner2*>(
      ::Test2_TestInner2::internal_default_instance());
  ::_Test2_default_instance_._instance.get_mutable()->f6_ = const_cast< ::Test2_TestInner3*>(
      ::Test2_TestInner3::internal_default_instance());
  ::_Test2_default_instance_._instance.get_mutable()->f7_ = const_cast< ::Test2_TestInner1*>(
      ::Test2_TestInner1::internal_default_instance());
}
void Test2::set_allocated_f4(::Test2_TestInner3* f4) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  clear_test_oneof();
  if (f4) {
    ::google::protobuf::Arena* submessage_arena = NULL;
    if (message_arena != submessage_arena) {
      f4 = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, f4, submessage_arena);
    }
    set_has_f4();
    test_oneof_.f4_ = f4;
  }
  // @@protoc_insertion_point(field_set_allocated:Test2.f4)
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Test2::kF1FieldNumber;
const int Test2::kF2FieldNumber;
const int Test2::kF3FieldNumber;
const int Test2::kF4FieldNumber;
const int Test2::kF5FieldNumber;
const int Test2::kF6FieldNumber;
const int Test2::kF7FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Test2::Test2()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pbtest3_2eproto::InitDefaultsTest2();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test2)
}
Test2::Test2(const Test2& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      f1_(from.f1_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from.has_f5()) {
    f5_ = new ::Test2_TestInner2(*from.f5_);
  } else {
    f5_ = NULL;
  }
  if (from.has_f6()) {
    f6_ = new ::Test2_TestInner3(*from.f6_);
  } else {
    f6_ = NULL;
  }
  if (from.has_f7()) {
    f7_ = new ::Test2_TestInner1(*from.f7_);
  } else {
    f7_ = NULL;
  }
  f2_ = from.f2_;
  clear_has_test_oneof();
  switch (from.test_oneof_case()) {
    case kF3: {
      set_f3(from.f3());
      break;
    }
    case kF4: {
      mutable_f4()->::Test2_TestInner3::MergeFrom(from.f4());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:Test2)
}

void Test2::SharedCtor() {
  ::memset(&f5_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f2_) -
      reinterpret_cast<char*>(&f5_)) + sizeof(f2_));
  clear_has_test_oneof();
  _cached_size_ = 0;
}

Test2::~Test2() {
  // @@protoc_insertion_point(destructor:Test2)
  SharedDtor();
}

void Test2::SharedDtor() {
  if (this != internal_default_instance()) delete f5_;
  if (this != internal_default_instance()) delete f6_;
  if (this != internal_default_instance()) delete f7_;
  if (has_test_oneof()) {
    clear_test_oneof();
  }
}

void Test2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test2::descriptor() {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Test2& Test2::default_instance() {
  ::protobuf_pbtest3_2eproto::InitDefaultsTest2();
  return *internal_default_instance();
}


void Test2::clear_test_oneof() {
// @@protoc_insertion_point(one_of_clear_start:Test2)
  switch (test_oneof_case()) {
    case kF3: {
      test_oneof_.f3_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
      break;
    }
    case kF4: {
      delete test_oneof_.f4_;
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = TEST_ONEOF_NOT_SET;
}


void Test2::Clear() {
// @@protoc_insertion_point(message_clear_start:Test2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f1_.Clear();
  if (GetArenaNoVirtual() == NULL && f5_ != NULL) {
    delete f5_;
  }
  f5_ = NULL;
  if (GetArenaNoVirtual() == NULL && f6_ != NULL) {
    delete f6_;
  }
  f6_ = NULL;
  if (GetArenaNoVirtual() == NULL && f7_ != NULL) {
    delete f7_;
  }
  f7_ = NULL;
  f2_ = GOOGLE_ULONGLONG(0);
  clear_test_oneof();
  _internal_metadata_.Clear();
}

bool Test2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string f1 = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_f1()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->f1(this->f1_size() - 1).data(),
            static_cast<int>(this->f1(this->f1_size() - 1).length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Test2.f1"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // fixed64 f2 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u /* 17 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &f2_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string f3 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_f3()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->f3().data(), static_cast<int>(this->f3().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Test2.f3"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Test2.TestInner3 f4 = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f4()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Test2.TestInner2 f5 = 5;
      case 5: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f5()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Test2.TestInner3 f6 = 6;
      case 6: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f6()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Test2.TestInner1 f7 = 7;
      case 7: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_f7()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test2)
  return false;
#undef DO_
}

void Test2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string f1 = 1;
  for (int i = 0, n = this->f1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f1(i).data(), static_cast<int>(this->f1(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test2.f1");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->f1(i), output);
  }

  // fixed64 f2 = 2;
  if (this->f2() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(2, this->f2(), output);
  }

  // string f3 = 3;
  if (has_f3()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f3().data(), static_cast<int>(this->f3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test2.f3");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->f3(), output);
  }

  // .Test2.TestInner3 f4 = 4;
  if (has_f4()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *test_oneof_.f4_, output);
  }

  // .Test2.TestInner2 f5 = 5;
  if (this->has_f5()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *f5_, output);
  }

  // .Test2.TestInner3 f6 = 6;
  if (this->has_f6()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, *f6_, output);
  }

  // .Test2.TestInner1 f7 = 7;
  if (this->has_f7()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, *f7_, output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Test2)
}

::google::protobuf::uint8* Test2::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Test2)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string f1 = 1;
  for (int i = 0, n = this->f1_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f1(i).data(), static_cast<int>(this->f1(i).length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test2.f1");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->f1(i), target);
  }

  // fixed64 f2 = 2;
  if (this->f2() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFixed64ToArray(2, this->f2(), target);
  }

  // string f3 = 3;
  if (has_f3()) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f3().data(), static_cast<int>(this->f3().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test2.f3");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->f3(), target);
  }

  // .Test2.TestInner3 f4 = 4;
  if (has_f4()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        4, *test_oneof_.f4_, deterministic, target);
  }

  // .Test2.TestInner2 f5 = 5;
  if (this->has_f5()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        5, *f5_, deterministic, target);
  }

  // .Test2.TestInner3 f6 = 6;
  if (this->has_f6()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        6, *f6_, deterministic, target);
  }

  // .Test2.TestInner1 f7 = 7;
  if (this->has_f7()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        7, *f7_, deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Test2)
  return target;
}

size_t Test2::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Test2)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated string f1 = 1;
  total_size += 1 *
      ::google::protobuf::internal::FromIntSize(this->f1_size());
  for (int i = 0, n = this->f1_size(); i < n; i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->f1(i));
  }

  // .Test2.TestInner2 f5 = 5;
  if (this->has_f5()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *f5_);
  }

  // .Test2.TestInner3 f6 = 6;
  if (this->has_f6()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *f6_);
  }

  // .Test2.TestInner1 f7 = 7;
  if (this->has_f7()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *f7_);
  }

  // fixed64 f2 = 2;
  if (this->f2() != 0) {
    total_size += 1 + 8;
  }

  switch (test_oneof_case()) {
    // string f3 = 3;
    case kF3: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->f3());
      break;
    }
    // .Test2.TestInner3 f4 = 4;
    case kF4: {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSize(
          *test_oneof_.f4_);
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test2::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Test2)
  GOOGLE_DCHECK_NE(&from, this);
  const Test2* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Test2>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Test2)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Test2)
    MergeFrom(*source);
  }
}

void Test2::MergeFrom(const Test2& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Test2)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f1_.MergeFrom(from.f1_);
  if (from.has_f5()) {
    mutable_f5()->::Test2_TestInner2::MergeFrom(from.f5());
  }
  if (from.has_f6()) {
    mutable_f6()->::Test2_TestInner3::MergeFrom(from.f6());
  }
  if (from.has_f7()) {
    mutable_f7()->::Test2_TestInner1::MergeFrom(from.f7());
  }
  if (from.f2() != 0) {
    set_f2(from.f2());
  }
  switch (from.test_oneof_case()) {
    case kF3: {
      set_f3(from.f3());
      break;
    }
    case kF4: {
      mutable_f4()->::Test2_TestInner3::MergeFrom(from.f4());
      break;
    }
    case TEST_ONEOF_NOT_SET: {
      break;
    }
  }
}

void Test2::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Test2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test2::CopyFrom(const Test2& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Test2)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test2::IsInitialized() const {
  return true;
}

void Test2::Swap(Test2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test2::InternalSwap(Test2* other) {
  using std::swap;
  f1_.InternalSwap(CastToBase(&other->f1_));
  swap(f5_, other->f5_);
  swap(f6_, other->f6_);
  swap(f7_, other->f7_);
  swap(f2_, other->f2_);
  swap(test_oneof_, other->test_oneof_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test2::GetMetadata() const {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

Test4_F5Entry_DoNotUse::Test4_F5Entry_DoNotUse() {}
Test4_F5Entry_DoNotUse::Test4_F5Entry_DoNotUse(::google::protobuf::Arena* arena) : SuperType(arena) {}
void Test4_F5Entry_DoNotUse::MergeFrom(const Test4_F5Entry_DoNotUse& other) {
  MergeFromInternal(other);
}
::google::protobuf::Metadata Test4_F5Entry_DoNotUse::GetMetadata() const {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[10];
}
void Test4_F5Entry_DoNotUse::MergeFrom(
    const ::google::protobuf::Message& other) {
  ::google::protobuf::Message::MergeFrom(other);
}


// ===================================================================

void Test4::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Test4::kF1FieldNumber;
const int Test4::kF2FieldNumber;
const int Test4::kF3FieldNumber;
const int Test4::kF4FieldNumber;
const int Test4::kF5FieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Test4::Test4()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_pbtest3_2eproto::InitDefaultsTest4();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:Test4)
}
Test4::Test4(const Test4& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  f5_.MergeFrom(from.f5_);
  f2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.f2().size() > 0) {
    f2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f2_);
  }
  ::memcpy(&f3_, &from.f3_,
    static_cast<size_t>(reinterpret_cast<char*>(&f4_) -
    reinterpret_cast<char*>(&f3_)) + sizeof(f4_));
  // @@protoc_insertion_point(copy_constructor:Test4)
}

void Test4::SharedCtor() {
  f2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&f3_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f4_) -
      reinterpret_cast<char*>(&f3_)) + sizeof(f4_));
  _cached_size_ = 0;
}

Test4::~Test4() {
  // @@protoc_insertion_point(destructor:Test4)
  SharedDtor();
}

void Test4::SharedDtor() {
  f2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Test4::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Test4::descriptor() {
  ::protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Test4& Test4::default_instance() {
  ::protobuf_pbtest3_2eproto::InitDefaultsTest4();
  return *internal_default_instance();
}


void Test4::Clear() {
// @@protoc_insertion_point(message_clear_start:Test4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  f5_.Clear();
  f2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&f3_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&f4_) -
      reinterpret_cast<char*>(&f3_)) + sizeof(f4_));
  _internal_metadata_.Clear();
}

bool Test4::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Test4)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // float f3 = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(21u /* 21 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                 input, &f3_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // string f2 = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_f2()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->f2().data(), static_cast<int>(this->f2().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Test4.f2"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 f1 = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &f1_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // map<int32, int32> f5 = 99;
      case 99: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 794 & 0xFF */)) {
          Test4_F5Entry_DoNotUse::Parser< ::google::protobuf::internal::MapField<
              Test4_F5Entry_DoNotUse,
              ::google::protobuf::int32, ::google::protobuf::int32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              ::google::protobuf::internal::WireFormatLite::TYPE_INT32,
              0 >,
            ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 > > parser(&f5_);
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
              input, &parser));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // double f4 = 160;
      case 160: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(1u /* 1281 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &f4_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Test4)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Test4)
  return false;
#undef DO_
}

void Test4::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Test4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float f3 = 2;
  if (this->f3() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteFloat(2, this->f3(), output);
  }

  // string f2 = 3;
  if (this->f2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f2().data(), static_cast<int>(this->f2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test4.f2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->f2(), output);
  }

  // int32 f1 = 10;
  if (this->f1() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(10, this->f1(), output);
  }

  // map<int32, int32> f5 = 99;
  if (!this->f5().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (output->IsSerializationDeterministic() &&
        this->f5().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->f5().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->f5().begin();
          it != this->f5().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Test4_F5Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(f5_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            99, *entry, output);
      }
    } else {
      ::google::protobuf::scoped_ptr<Test4_F5Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->f5().begin();
          it != this->f5().end(); ++it) {
        entry.reset(f5_.NewEntryWrapper(
            it->first, it->second));
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            99, *entry, output);
      }
    }
  }

  // double f4 = 160;
  if (this->f4() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(160, this->f4(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Test4)
}

::google::protobuf::uint8* Test4::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Test4)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // float f3 = 2;
  if (this->f3() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteFloatToArray(2, this->f3(), target);
  }

  // string f2 = 3;
  if (this->f2().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->f2().data(), static_cast<int>(this->f2().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Test4.f2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->f2(), target);
  }

  // int32 f1 = 10;
  if (this->f1() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(10, this->f1(), target);
  }

  // map<int32, int32> f5 = 99;
  if (!this->f5().empty()) {
    typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_pointer
        ConstPtr;
    typedef ::google::protobuf::internal::SortItem< ::google::protobuf::int32, ConstPtr > SortItem;
    typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

    if (deterministic &&
        this->f5().size() > 1) {
      ::google::protobuf::scoped_array<SortItem> items(
          new SortItem[this->f5().size()]);
      typedef ::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::size_type size_type;
      size_type n = 0;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->f5().begin();
          it != this->f5().end(); ++it, ++n) {
        items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
      }
      ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
      ::google::protobuf::scoped_ptr<Test4_F5Entry_DoNotUse> entry;
      for (size_type i = 0; i < n; i++) {
        entry.reset(f5_.NewEntryWrapper(
            items[static_cast<ptrdiff_t>(i)].second->first, items[static_cast<ptrdiff_t>(i)].second->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       99, *entry, deterministic, target);
;
      }
    } else {
      ::google::protobuf::scoped_ptr<Test4_F5Entry_DoNotUse> entry;
      for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
          it = this->f5().begin();
          it != this->f5().end(); ++it) {
        entry.reset(f5_.NewEntryWrapper(
            it->first, it->second));
        target = ::google::protobuf::internal::WireFormatLite::
                   InternalWriteMessageNoVirtualToArray(
                       99, *entry, deterministic, target);
;
      }
    }
  }

  // double f4 = 160;
  if (this->f4() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(160, this->f4(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Test4)
  return target;
}

size_t Test4::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Test4)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // map<int32, int32> f5 = 99;
  total_size += 2 *
      ::google::protobuf::internal::FromIntSize(this->f5_size());
  {
    ::google::protobuf::scoped_ptr<Test4_F5Entry_DoNotUse> entry;
    for (::google::protobuf::Map< ::google::protobuf::int32, ::google::protobuf::int32 >::const_iterator
        it = this->f5().begin();
        it != this->f5().end(); ++it) {
      entry.reset(f5_.NewEntryWrapper(it->first, it->second));
      total_size += ::google::protobuf::internal::WireFormatLite::
          MessageSizeNoVirtual(*entry);
    }
  }

  // string f2 = 3;
  if (this->f2().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->f2());
  }

  // float f3 = 2;
  if (this->f3() != 0) {
    total_size += 1 + 4;
  }

  // int32 f1 = 10;
  if (this->f1() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->f1());
  }

  // double f4 = 160;
  if (this->f4() != 0) {
    total_size += 2 + 8;
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Test4::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Test4)
  GOOGLE_DCHECK_NE(&from, this);
  const Test4* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Test4>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Test4)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Test4)
    MergeFrom(*source);
  }
}

void Test4::MergeFrom(const Test4& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Test4)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  f5_.MergeFrom(from.f5_);
  if (from.f2().size() > 0) {

    f2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.f2_);
  }
  if (from.f3() != 0) {
    set_f3(from.f3());
  }
  if (from.f1() != 0) {
    set_f1(from.f1());
  }
  if (from.f4() != 0) {
    set_f4(from.f4());
  }
}

void Test4::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Test4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Test4::CopyFrom(const Test4& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Test4)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Test4::IsInitialized() const {
  return true;
}

void Test4::Swap(Test4* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Test4::InternalSwap(Test4* other) {
  using std::swap;
  f5_.Swap(&other->f5_);
  f2_.Swap(&other->f2_);
  swap(f3_, other->f3_);
  swap(f1_, other->f1_);
  swap(f4_, other->f4_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Test4::GetMetadata() const {
  protobuf_pbtest3_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_pbtest3_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test0* Arena::Create< ::Test0 >(Arena* arena) {
  return Arena::CreateInternal< ::Test0 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test1_FMapEntry_DoNotUse* Arena::Create< ::Test1_FMapEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Test1_FMapEntry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test1* Arena::Create< ::Test1 >(Arena* arena) {
  return Arena::CreateInternal< ::Test1 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test2_TestInner1* Arena::Create< ::Test2_TestInner1 >(Arena* arena) {
  return Arena::CreateInternal< ::Test2_TestInner1 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test2_TestInner2* Arena::Create< ::Test2_TestInner2 >(Arena* arena) {
  return Arena::CreateInternal< ::Test2_TestInner2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test2_TestInner3_TestInner3_1* Arena::Create< ::Test2_TestInner3_TestInner3_1 >(Arena* arena) {
  return Arena::CreateInternal< ::Test2_TestInner3_TestInner3_1 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test2_TestInner3_TestInner3_2* Arena::Create< ::Test2_TestInner3_TestInner3_2 >(Arena* arena) {
  return Arena::CreateInternal< ::Test2_TestInner3_TestInner3_2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test2_TestInner3_F1Entry_DoNotUse* Arena::Create< ::Test2_TestInner3_F1Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Test2_TestInner3_F1Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test2_TestInner3* Arena::Create< ::Test2_TestInner3 >(Arena* arena) {
  return Arena::CreateInternal< ::Test2_TestInner3 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test2* Arena::Create< ::Test2 >(Arena* arena) {
  return Arena::CreateInternal< ::Test2 >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test4_F5Entry_DoNotUse* Arena::Create< ::Test4_F5Entry_DoNotUse >(Arena* arena) {
  return Arena::CreateInternal< ::Test4_F5Entry_DoNotUse >(arena);
}
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Test4* Arena::Create< ::Test4 >(Arena* arena) {
  return Arena::CreateInternal< ::Test4 >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
